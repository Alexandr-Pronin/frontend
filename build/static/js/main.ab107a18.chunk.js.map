{"version":3,"sources":["eventbus.ts","models/protocolModels/protocols.ts","models/user.ts","App.ts","components/loadingButton.tsx","backendservice.ts","auth.ts","views/login/loginPageView.tsx","components/avatars.tsx","models/workee.ts","views/dashboard/accountView.tsx","components/coverLoader.tsx","utils.ts","models/protocolModels/protocolMetaData.ts","models/protocolModels/protocol.ts","models/protocolModels/protocolEntry.ts","models/protocolModels/protocolTableEntry.ts","models/protocolModels/protocolNumberEntry.ts","models/protocolModels/protocolSelectEntry.ts","parser/protocolParserV1.ts","models/protocolModels/protocolTemplate.ts","views/dashboard/protocolTemplates/newTemplateForm.tsx","views/dashboard/protocolTemplates/templateDeleteDialog.tsx","components/floatingButton.tsx","views/dashboard/entryViews/protocolEntryEditNumberView.tsx","views/dashboard/entryViews/protocolNumberEntryView.tsx","views/dashboard/entryViews/protocolSelectEntryView.tsx","components/editableChip.tsx","views/dashboard/entryViews/protocolEntryEditSelectView.tsx","views/dashboard/entryViews/protocolTableEntryView.tsx","views/dashboard/entryViews/protocolEntryEditTableView.tsx","views/dashboard/protocolTemplates/editTemplateView.tsx","models/label.ts","components/labelChip.tsx","views/dashboard/protocolTemplates/labelEditor.tsx","views/dashboard/protocolTemplates/protocolTemplatesView.tsx","components/formattedTextField.tsx","models/device.ts","views/dashboard/qrCodeView.tsx","views/dashboard/registerDeviceView.tsx","views/dashboard/devicesView.tsx","views/dashboard/completedProtocols/completedProtocolView.tsx","views/dashboard/completedProtocols/completedNewProtocolsView.tsx","views/dashboard/completedProtocols/completedArchivedProtocolsView.tsx","views/dashboard/completedProtocols/protocolDeleteDialog.tsx","views/dashboard/completedProtocols/completedProtocolsView.tsx","views/dashboard/dashboardPageView.tsx","AppRouter.tsx","index.tsx"],"names":["EventBus","listeners","event","listener","this","push","args","forEach","apply","_instance","Protocols","completed","templates","labels","User","devices","workees","email","unternehmen","vorname","nachname","protocols","UserBuilder","user","setVorname","val","setNachname","setEmail","setUnternehmen","setDevices","setWorkees","build","App","cookies","Cookies","appName","config","fadeInDuration","fadeInDelay","update","instance","emit","LoadingButton","style","props","display","alignItems","position","Button","variant","color","disabled","loading","onClick","children","CircularProgress","size","top","left","marginTop","marginLeft","React","Component","BackendService","baseURL","_BASEURL","timeout","_TIMEOUT","_APIPATH","checkSession","login","extractErrorText","error","response","status","request","message","buildWithSessionKey","url","method","params","body","baseurl","headers","session_key","Auth","getSessionKey","data","buildBasicAuthRequest","username","password","path","auth","get","remove","_SESSION_COOKIE_PATH","_SESSION_COOKIE_NAME","Promise","resolve","reject","isLoggedIn","BS","axios","then","res","logout","key","set","attempt","firstname","lastname","msg","undefined","LoginPageView","state","attemptLogin","setState","catch","finally","handleChangeEmail","target","value","handleChangePassword","className","Paper","square","Tabs","onChange","indicatorColor","textColor","aria-label","Tab","icon","label","Container","length","Alert","severity","TextField","fullWidth","bind","type","float","withStyles","theme","createStyles","badge","backgroundColor","boxShadow","palette","background","paper","width","height","borderRadius","animation","border","content","transform","opacity","Badge","root","Avatar","useStyles","makeStyles","margin","spacing","largeavatar","AvatarWithIcon","classes","overlap","anchorOrigin","vertical","horizontal","badgeContent","alt","name","src","avatar","Workee","id","WorkeeBuilder","workee","setName","setId","AccountView","addworkee","handleDeleteWorkee","index","indexOf","splice","handleAddWorkee","trim","find","w","err","handleAddWorkeeChange","element","delay","transitionDuration","Snackbar","open","autoHideDuration","onClose","reason","lineHeight","marginRight","List","dense","ListItem","ListItemIcon","ListItemText","primary","Typography","map","Chip","onDelete","marginBottom","Grid","container","item","IconButton","CoverLoader","Utils","obj","prop","hasOwnProperty","isObject","copyObject","dateToString","date","day","appendZero","getDate","month","getMonth","year","getFullYear","dateTimeToString","noSeconds","delimiter","dateString","hours","getHours","minutes","getMinutes","seconds","getSeconds","timeString","ProtocolMetaData","creator","parserVersion","version","template","completionDate","receiptDate","Protocol","entries","metadata","archived","isValid","valid","entry","ProtocolEntry","_isValid","ProtocolTableEntry","zeilen","ProtocolTableEntryConfig","setType","Zeile","header","spalten","Spalte","ProtocolNumberEntry","ProtocolNumberEntryConfig","validate","checkValid","maxValue","minValue","ProtocolSelectEntry","choices","possibleChoices","ProtocolSelectEntryConfig","choice","maxChoices","minChoices","ProtocolParserV1","jsonProtocol","_json","parse","errors","json","protocol","isNaN","Date","e","ParserError","messages","ProtocolTemplate","createdAt","toJSON","fromJSON","NewTemplateForm","handleClickOpen","handleClose","handleCreateClicked","handleNameChange","on","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","DialogActions","TemplateDeleteDialog","show","handleShow","handleDeleteConfirmed","aria-describedby","FloatingButton","right","bottom","Zoom","in","transitionDelay","unmountOnExit","Fab","onclick","ProtocolEntryEditNumberView","backup","JSON","stringify","handleCancel","handleLabelChange","forceUpdate","stopLoading","startLoading","handleConfigMinValueChange","Number","handleConfigMaxValueChange","handleSaveClicked","console","log","Icon","fontSize","paddingLeft","ProtocolNumberEntryView","styles","chip","noChecks","noValue","ProtocolSelectEntryView","padding","EditableChip","edit","handleChange","handleSave","outline","onBlur","deleteIcon","ProtocolEntryEditSelectView","handleDeleteChoice","ci","handleChoiceChange","addButtonDisabled","edge","ProtocolTableEntryView","ProtocolEntryEditTableView","buildTableRecursive","Table","TableBody","zeile","buildTableRowRecursive","parent","TableRow","uuid","TableCell","spalte","indexSpalte","buildTableCellRecursive","zeileIndex","fontWeight","RowMenu","anchor","handleOpen","currentTarget","handleAddSpalte","handleDeleteZeile","handleAddZeileTop","handleAddZeileBottom","handleMarkAsHeader","Menu","anchorEl","keepMounted","Boolean","MenuItem","NewCellMenu","handleAddZeile","z","handleDeleteSpalte","handleSetNumberEntry","handleSetSelectEntry","handleSetValue","handleDeleteValue","EditTemplateView","drawerOpen","editEntry","hideDrawer","showDrawer","handleAddField","handleEditField","handleDeleteEntry","newObj","t","onFocus","stopPropagation","button","ListItemSecondaryAction","Drawer","MenuList","noWrap","Label","details","LabelChip","handlePopoverClose","handlePopoverOpen","aria-owns","aria-haspopup","onMouseEnter","onMouseLeave","Popover","transformOrigin","disableRestoreFocus","LabelEditor","loadLabelsFromBackend","copy","colorPickerAnchor","colorPickerLabel","deleteLabel","closeColorPicker","openColorPicker","lbl","handleColorChange","hex","handleDetailsChange","handleAddClicked","TableHead","align","Fragment","Tooltip","title","colSpan","textAlign","ProtocolTemplatesView","editTemplateId","showError","handleDownloadClicked","filename","responseType","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","appendChild","click","handleNewTemplateClicked","componentDidMount","a","lbl1","FormattedTextField","displayed","toUpperCase","split","join","dispalyed","i","call","Device","devicename","devicecode","borrowDate","lastsync","asTableData","DeviceBuilder","device","setCode","code","QRCode","require","QRCodeView","AlertTitle","RegisterDeviceView","step","deviceLoading","handleOpenStepTwo","timer","setInterval","approved","handleOpenStepThree","clearInterval","DevicesView","lookup","0","columns","field","options","paging","filtering","draggable","localization","editTooltip","deleteTooltip","emptyDataSourceMessage","editRow","saveTooltip","cancelTooltip","deleteText","actions","toolbar","searchPlaceholder","editable","onRowUpdate","newData","oldData","setTimeout","onRowDelete","AddDeviceView","helpOpen","deviceCode","showQRCode","onDeviceCodeChange","handleRegisterDevice","lg","xs","CompletedProtocolView","archiveProtocol","md","sm","Card","CardMedia","backgroundSize","minHeight","image","CardContent","gutterBottom","component","secondary","CardActions","startIcon","CompletedNewProtocolsView","protocolData","ExpansionPanel","expanded","ExpansionPanelSummary","expandIcon","aria-controls","FormControlLabel","control","Checkbox","checked","selected","ExpansionPanelDetails","CompletedArchivedProtocolsView","count","page","entriesPerPage","loadPage","calcPageCount","handleChangePage","Math","floor","Pagination","ProtocolDeleteDialog","ids","findIndex","CompletedProtocolsView","getIds","p","currentTab","showDeleteConfirmDialog","successMessage","handleSelectChange","handleExpandedChange","resetSelection","AppBar","newVal","TabPanel","other","role","hidden","Box","pl","a11yProps","tabs","borderRight","divider","DashboardPageView","useState","setValue","orientation","newValue","buildDevicesData","TabPanelContainer","paddingRight","overflowY","AppRouter","exact","MainPage","Impressum","NotFoundPage","to","ContinuosCheckBackendConnection","renderApp","render","getElementById","success","library","add","fas","fab","pathElements","object","shift"],"mappings":"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","file":"static/js/main.ab107a18.chunk.js","sourcesContent":["export class EventBus {\n  private static _instance = new EventBus();\n\n  private listeners: any = {};\n\n  static get instance() {\n    return EventBus._instance;\n  }\n\n  on(event: string, listener: Function): EventBus {\n    if (!(event in this.listeners)) {\n      this.listeners[event] = [];\n    }\n    this.listeners[event].push(listener);\n    return this;\n  }\n\n  emit(event: string, ...args: any[]): EventBus {\n    if (event in this.listeners) {\n      this.listeners[event].forEach((listener: Function) => {\n        listener.apply(null, args);\n      });\n    }\n    return this;\n  }\n}\n","import { Protocol } from \"./protocol\";\nimport { ProtocolTemplate } from \"./protocolTemplate\";\nimport { Label } from \"../label\";\n\nexport class Protocols {\n  completed: Protocol[] = [];\n  templates: ProtocolTemplate[] = [];\n  labels: Label[] = [];\n}\n","import { Device } from \"./device\";\nimport { Workee } from \"./workee\";\nimport { Protocols } from \"./protocolModels/protocols\";\n\nexport class User {\n  devices: Device[] = [];\n  workees: Workee[] = [];\n  email: string = \"\";\n  unternehmen: string = \"\";\n  vorname: string = \"\";\n  nachname: string = \"\";\n  protocols: Protocols = new Protocols();\n\n  get name() {\n    return `${this.vorname} ${this.nachname}`;\n  }\n}\n\nexport class UserBuilder {\n  user: User = new User();\n  setVorname = (val) => {\n    this.user.vorname = val;\n    return this;\n  };\n\n  setNachname = (val) => {\n    this.user.nachname = val;\n    return this;\n  };\n\n  setEmail = (val) => {\n    this.user.email = val;\n    return this;\n  };\n\n  setUnternehmen = (val) => {\n    this.user.unternehmen = val;\n    return this;\n  };\n\n  setDevices = (devices: Device[]) => {\n    this.user.devices = devices;\n    return this;\n  };\n\n  setWorkees = (workees: Workee[]) => {\n    this.user.workees = workees;\n    return this;\n  };\n\n  build = () => {\n    return this.user;\n  };\n}\n","import Cookies from \"universal-cookie\";\nimport { User } from \"./models/user\";\nimport { EventBus } from \"./eventbus\";\n\nclass AppConfig {\n  fadeInDuration: number = 0;\n  fadeInDelay: number = 0;\n}\n\nexport class App {\n  public static user: User = new User();\n  public static cookies: Cookies = new Cookies();\n  public static appName: string = \"DataBuddy\";\n  public static config: AppConfig = new AppConfig();\n\n  public static update = () => {\n    EventBus.instance.emit(\"updateApp\");\n  };\n}\n","import React from \"react\";\nimport { Button, CircularProgress } from \"@material-ui/core\";\n\nexport class LoadingButton extends React.Component<{\n  loading: boolean;\n  onClick?:\n    | ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void)\n    | undefined;\n  style?: React.CSSProperties;\n}> {\n  render() {\n    return (\n      <div style={this.props.style ? this.props.style : {}}>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <div style={{ position: \"relative\" }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={this.props.loading}\n              onClick={this.props.onClick}\n            >\n              {this.props.children}\n            </Button>\n            {this.props.loading && (\n              <CircularProgress\n                size={24}\n                style={{\n                  color: \"primary\",\n                  position: \"absolute\",\n                  top: \"50%\",\n                  left: \"50%\",\n                  marginTop: -12,\n                  marginLeft: -12,\n                }}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import Auth from \"./auth\";\n\nexport class ApiPath {\n  checkSession: string = \"/checksession\";\n  login: string = \"/login\";\n}\n\nexport class BackendService {\n  private static _TIMEOUT: number = 1000;\n  private static _BASEURL: string = \"\";\n  private static _APIPATH: ApiPath = new ApiPath();\n\n  public static config = () => {\n    return new BackendService();\n  };\n\n  public baseURL = (val: string) => {\n    BackendService._BASEURL = val;\n    return this;\n  };\n\n  public timeout = (val: number) => {\n    BackendService._TIMEOUT = val;\n    return this;\n  };\n\n  public static get baseurl(): string {\n    return BackendService._BASEURL;\n  }\n\n  public static get path(): ApiPath {\n    return BackendService._APIPATH;\n  }\n\n  /**\n   * @param error response\n   * @returns Error message\n   */\n  public static extractErrorText = (error) => {\n    let str = \"Unbekannter Fehler\";\n    if (error.response) {\n      // Request made and server responded\n      str = error.response.status;\n    } else if (error.request) {\n      // The request was made but no response was received\n      str = \"No Response\";\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      str = error.message;\n    }\n    return str;\n  };\n\n  /**\n   * @param url The api path, e.g. /api/login\n   * @param method Request method: GET, POST, DELETE\n   * @param params URL-parameters\n   * @param body Request data\n   * @returns Axios config object\n   */\n  public static buildWithSessionKey: any = (\n    url: string,\n    method: \"GET\" | \"POST\" | \"DELETE\",\n    params?: Object,\n    body?: Object\n  ) => {\n    return {\n      url: url,\n      method: method,\n      baseURL: BackendService.baseurl,\n      headers: {\n        session_key: Auth.getSessionKey(),\n      },\n      params: params ? params : {},\n      data: body ? body : {},\n      timeout: BackendService._TIMEOUT,\n    };\n  };\n\n  /**\n   * @param username unencoded username\n   * @param password unencoded password\n   * @returns Axios config object with Basic Auth (Base64)\n   */\n  public static buildBasicAuthRequest = (\n    username: string,\n    password: string\n  ): any => {\n    //Axios automatically creates Basic Auth Header (Authorization: Basic lkOADASOGuwuiaDHd==)\n    return {\n      url: BackendService.path.login,\n      method: \"get\",\n      baseURL: BackendService.baseurl,\n      headers: {},\n      params: {},\n      auth: {\n        username: username,\n        password: password,\n      },\n      timeout: BackendService._TIMEOUT,\n    };\n  };\n}\n","import { App } from \"./App\";\nimport axios from \"axios\";\nimport { EventBus } from \"./eventbus\";\nimport { BackendService as BS } from \"./backendservice\";\nimport { UserBuilder } from \"./models/user\";\n\nexport default class Auth {\n  private static _SESSION_COOKIE_PATH = \"/\";\n  private static _SESSION_COOKIE_NAME = \"session_key\";\n\n  public static isLoggedIn() {\n    return !!App.cookies.get(\"session_key\");\n  }\n\n  public static logout() {\n    App.cookies.remove(\"session_key\", { path: Auth._SESSION_COOKIE_PATH });\n    EventBus.instance.emit(\"updateApp\");\n  }\n\n  public static getSessionKey() {\n    const session_key = App.cookies.get(Auth._SESSION_COOKIE_NAME);\n    return session_key ? session_key : \"\";\n  }\n\n  public static checkSession() {\n    var promise = new Promise((resolve, reject) => {\n      if (Auth.isLoggedIn()) {\n        var config = BS.buildWithSessionKey(BS.path.checkSession, \"GET\");\n        axios(config).then(\n          (res) => {\n            if (res.status !== 200) {\n              Auth.logout();\n              reject(\"any\");\n            } else resolve();\n          },\n          (error) => {\n            Auth.logout();\n            reject(\"Session probably expired\");\n          }\n        );\n      } else {\n        reject(\"Cookie not set\");\n      }\n    });\n    return promise;\n  }\n\n  public static attempt = (email, password) => {\n    var promise = new Promise((resolve, reject) => {\n      var config = BS.buildBasicAuthRequest(email, password);\n      axios(config).then(\n        (res) => {\n          if (res.status === 200) {\n            App.cookies.set(Auth._SESSION_COOKIE_NAME, res.data.session_key, {\n              path: Auth._SESSION_COOKIE_PATH,\n            });\n            App.user = new UserBuilder()\n              .setVorname(res.data.user.firstname)\n              .setNachname(res.data.user.lastname)\n              .setUnternehmen(\"Leipziger Verkehrsbetriebe\")\n              .setEmail(res.data.user.email)\n              .build();\n\n            resolve();\n          } else reject();\n        },\n        (error) => {\n          var msg = \"\";\n          if (\n            error.response !== undefined &&\n            error.response.status !== undefined\n          ) {\n            if (error.response.status === 401)\n              msg = \"Nutzername oder Passwort falsch.\";\n            else msg = \"Es ist ein Fehler aufgetreten.\";\n          } else {\n            msg = \"Verbindungsfehler\";\n          }\n          Auth.logout();\n          reject(msg);\n        }\n      );\n    });\n    return promise;\n  };\n\n  public static mock(key: string) {\n    App.cookies.set(Auth._SESSION_COOKIE_NAME, key, {\n      path: Auth._SESSION_COOKIE_PATH,\n    });\n  }\n}\n","import React from \"react\";\nimport { Paper, Container, Tab, Tabs, TextField } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LoadingButton } from \"../../components/loadingButton\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport axios from \"axios\";\nimport { BackendService } from \"../../backendservice\";\nimport Auth from \"../../auth\";\nimport { EventBus } from \"../../eventbus\";\n\nexport default class LoginPageView extends React.Component {\n  state: {\n    loading: boolean;\n    email: string;\n    password: string;\n    error: string;\n  } = {\n    loading: false,\n    email: \"\",\n    password: \"\",\n    error: \"\",\n  };\n\n  attemptLogin = () => {\n    this.setState({ loading: true, error: \"\" });\n    Auth.attempt(this.state.email, this.state.password)\n      .then((res) => {\n        EventBus.instance.emit(\"updateApp\");\n      })\n      .catch((msg) => {\n        this.setState({ error: msg });\n      })\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  handleChangeEmail = (event) => {\n    this.setState({ email: event.target.value });\n  };\n\n  handleChangePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className={\"main-background\"}>\n        <div className={\"login-container\"}>\n          <Paper square className={\"login\"}>\n            <Tabs\n              value={0}\n              onChange={() => {}}\n              variant=\"fullWidth\"\n              indicatorColor=\"secondary\"\n              textColor=\"secondary\"\n              aria-label=\"icon label login register tabs\"\n            >\n              <Tab\n                icon={<FontAwesomeIcon icon={\"paper-plane\"} />}\n                label=\"LOGIN\"\n              />\n            </Tabs>\n            <br />\n            <br />\n            <Container>\n              {this.state.error.length > 0 && (\n                <Alert severity={\"warning\"}>{this.state.error}</Alert>\n              )}\n              <br />\n              <TextField\n                label=\"E-Mail Adresse\"\n                fullWidth\n                onChange={this.handleChangeEmail.bind(this)}\n              />\n              <br />\n              <br />\n              <TextField\n                type=\"password\"\n                label=\"Passwort\"\n                fullWidth\n                onChange={this.handleChangePassword.bind(this)}\n              />\n              <br />\n              <br />\n              <LoadingButton\n                style={{ float: \"right\" }}\n                onClick={this.attemptLogin.bind(this)}\n                loading={this.state.loading}\n              >\n                Einloggen\n              </LoadingButton>\n              <br />\n              <br />\n            </Container>\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {\n  Theme,\n  makeStyles,\n  withStyles,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconName } from \"@fortawesome/fontawesome-svg-core\";\n\nconst StyledBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: \"#44b700\",\n      color: \"#44b700\",\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      \"&::after\": {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: \"50%\",\n        animation: \"$ripple 1.2s infinite ease-in-out\",\n        border: \"1px solid currentColor\",\n        content: '\"\"',\n      },\n    },\n    \"@keyframes ripple\": {\n      \"0%\": {\n        transform: \"scale(.8)\",\n        opacity: 1,\n      },\n      \"100%\": {\n        transform: \"scale(2.4)\",\n        opacity: 0,\n      },\n    },\n  })\n)(Badge);\n\nwithStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 22,\n      height: 22,\n      border: `2px solid ${theme.palette.background.paper}`,\n    },\n  })\n)(Avatar);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      \"& > *\": {\n        margin: theme.spacing(1),\n      },\n    },\n    largeavatar: {\n      height: theme.spacing(7),\n      width: theme.spacing(7),\n      border: \"1px dotted black\",\n    },\n  })\n);\n\nexport function AvatarWithStatus(props: {\n  name: string;\n  avatar: string;\n  status: \"online\";\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <StyledBadge\n        overlap=\"circle\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        variant=\"dot\"\n      >\n        <Avatar alt={props.name} src={props.avatar} />\n      </StyledBadge>\n    </div>\n  );\n}\n\nexport function AvatarWithIcon(props: {\n  name: string;\n  avatar: string;\n  icon: IconName;\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Badge\n        overlap=\"circle\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        badgeContent={\n          //<SmallAvatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n          <FontAwesomeIcon icon={props.icon} />\n        }\n      >\n        <Avatar\n          className={classes.largeavatar}\n          alt={props.name}\n          src={props.avatar}\n        />\n      </Badge>\n    </div>\n  );\n}\n","import { App } from \"../App\";\n\nexport class Workee {\n  name: string = \"\";\n  id: number = 0;\n\n  /**\n   * @returns workees full name\n   */\n}\n\nexport class WorkeeBuilder {\n  workee: Workee = new Workee();\n  setName = (name: string) => {\n    this.workee.name = name;\n    return this;\n  };\n  setId = (id: number) => {\n    this.workee.id = id;\n    return this;\n  };\n  build = () => {\n    return this.workee;\n  };\n}\n","import React from \"react\";\nimport {\n  Paper,\n  Avatar,\n  Badge,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Chip,\n  Grid,\n  TextField,\n  IconButton,\n  Snackbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { App } from \"../../App\";\nimport MailIcon from \"@material-ui/icons/MailOutline\";\nimport UserIcon from \"@material-ui/icons/PersonOutline\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport AddUser from \"@material-ui/icons/PersonAdd\";\nimport AddIcon from \"@material-ui/icons/Check\";\nimport { WorkeeBuilder, Workee } from \"../../models/workee\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport FadeIn from \"react-fade-in\";\nimport axios from \"axios\";\nimport { BackendService } from \"../../backendservice\";\n\nexport default class AccountView extends React.Component {\n  state: { addworkee: string; error: string } = { addworkee: \"\", error: \"\" };\n\n  handleDeleteWorkee = (workee: Workee) => {\n    const index = App.user.workees.indexOf(workee);\n    if (index !== -1) {\n      let data = BackendService.buildWithSessionKey(\n        `/workees/${workee.id}`,\n        \"DELETE\"\n      );\n      axios(data)\n        .then(() => {\n          App.user.workees.splice(index, 1);\n        })\n        .catch(() => {\n          this.setState({\n            error: \"Beim löschen des Mitarbeiters ist ein Fehler aufgetreten.\",\n          });\n        })\n        .finally(() => {\n          App.update();\n        });\n    }\n  };\n\n  handleAddWorkee = () => {\n    var name = this.state.addworkee.trim();\n    if (name.length === 0) {\n      this.setState({\n        error: \"Geben Sie zuerst den Namen des Mitarbeiters an.\",\n      });\n      return;\n    }\n    if (App.user.workees.find((w) => w.name === name)) {\n      this.setState({\n        error: \"Es existiert bereits ein Mitarbeiter mit diesem Namen.\",\n      });\n      return;\n    }\n    let data = BackendService.buildWithSessionKey(\n      \"/workees\",\n      \"POST\",\n      {},\n      { name: name }\n    );\n    axios(data)\n      .then((res) => {\n        App.user.workees.push(\n          new WorkeeBuilder().setName(name).setId(res.data.id).build()\n        );\n      })\n      .catch((err) => {\n        this.setState({\n          error: \"Beim anlegen des Mitarbeiters ist ein Fehler aufgetreten.\",\n        });\n      })\n      .finally(() => {\n        this.setState({ addworkee: \"\" });\n        App.update();\n      });\n  };\n\n  handleAddWorkeeChange = (event) => {\n    this.setState({ addworkee: event.target.value });\n  };\n\n  componentDidMount() {\n    let data = BackendService.buildWithSessionKey(\"/workees\", \"GET\");\n    axios(data)\n      .then((res) => {\n        App.user.workees = [];\n        res.data.forEach((element) => {\n          App.user.workees.push(\n            new WorkeeBuilder().setName(element.name).setId(element.id).build()\n          );\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          error: \"Beim abrufen der Mitarbeiter ist ein Fehler aufgetreten.\",\n        });\n      })\n      .finally(() => {\n        App.update();\n      });\n  }\n\n  render() {\n    return (\n      <FadeIn\n        delay={App.config.fadeInDelay}\n        transitionDuration={App.config.fadeInDuration}\n      >\n        <Paper className={\"padding margin-top\"}>\n          <Snackbar\n            open={this.state.error.length > 0}\n            autoHideDuration={5000}\n            onClose={(event?: React.SyntheticEvent, reason?: string) => {\n              reason !== \"clickaway\" && this.setState({ error: \"\" });\n            }}\n          >\n            <Alert severity=\"warning\">{this.state.error}</Alert>\n          </Snackbar>\n          <h6\n            className={\"MuiTypography-root MuiTypography-h6\"}\n            style={{ lineHeight: \"3rem\" }}\n          >\n            <Badge>\n              <Avatar\n                style={{ border: \"1px dotted black\", marginRight: \"0.5rem\" }}\n                alt={App.user.name}\n                src={\"/img/avatar/1.jpg\"}\n              />\n              {App.user.unternehmen}\n            </Badge>\n          </h6>\n          <List dense={true}>\n            <ListItem>\n              <ListItemIcon>\n                <UserIcon />\n              </ListItemIcon>\n              <ListItemText primary={App.user.name} />\n            </ListItem>\n            <ListItem>\n              <ListItemIcon>\n                <MailIcon />\n              </ListItemIcon>\n              <ListItemText primary={App.user.email} />\n            </ListItem>\n          </List>\n        </Paper>\n\n        <Paper className={\"margin-top padding\"}>\n          <h6\n            className={\"MuiTypography-root MuiTypography-h6\"}\n            style={{ lineHeight: \"3rem\" }}\n          >\n            Mitarbeiter\n          </h6>\n\n          {App.user.workees.length === 0 ? (\n            <Typography color=\"textSecondary\">\n              Fügen Sie Mitarbeiter hinzu.\n            </Typography>\n          ) : (\n            App.user.workees.map((workee) => {\n              return (\n                <Chip\n                  key={`workee-${workee.id}`}\n                  icon={<FaceIcon />}\n                  label={workee.name}\n                  onDelete={this.handleDeleteWorkee.bind(this, workee)}\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  style={{ marginBottom: \"0.5rem\", marginRight: \"0.5rem\" }}\n                />\n              );\n            })\n          )}\n\n          <Grid container spacing={1} alignItems=\"flex-end\">\n            <Grid item>\n              <AddUser />\n            </Grid>\n            <Grid item>\n              <TextField\n                value={this.state.addworkee}\n                label=\"Mitarbeiter hinzufügen\"\n                onChange={this.handleAddWorkeeChange.bind(this)}\n              />\n            </Grid>\n            <Grid item>\n              <IconButton\n                aria-label=\"add\"\n                onClick={this.handleAddWorkee.bind(this)}\n              >\n                <AddIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Paper>\n      </FadeIn>\n    );\n  }\n}\n","import React from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nexport class CoverLoader extends React.Component {\n  render() {\n    return (\n      <div className=\"cover-loader\">\n        <div className=\"loader\">\n          <CircularProgress />\n        </div>\n      </div>\n    );\n  }\n}\n","export default class Utils {\n  /**\n   * @param date Date object\n   * @returns string in format dd.MM.yy\n   */\n  public static dateToString = (date: Date): string => {\n    let day: string = Utils.appendZero(date.getDate());\n    let month: string = Utils.appendZero(date.getMonth() + 1);\n    let year: string = date.getFullYear() + \"\";\n\n    return `${day}.${month}.${year}`;\n  };\n\n  /**\n   * @param date Date object\n   * @param noSeconds Whether to show seconds or not\n   * @param delimiter the char between date and time, default: whitespace\n   * @returns string in format dd.MM.yy HH:mm[:ss]\n   */\n  public static dateTimeToString = (\n    date: Date,\n    noSeconds?: boolean,\n    delimiter?: string\n  ): string => {\n    delimiter = delimiter || \" \";\n    let dateString: string = Utils.dateToString(date);\n    let hours: string = Utils.appendZero(date.getHours());\n    let minutes: string = Utils.appendZero(date.getMinutes());\n    let seconds: string = Utils.appendZero(date.getSeconds());\n    let timeString: string = noSeconds\n      ? `${hours}:${minutes}`\n      : `${hours}:${minutes}:${seconds}`;\n\n    return `${dateString}${delimiter}${timeString}`;\n  };\n\n  public static appendZero(val: number | string): string {\n    return val < 10 ? \"0\" + val : \"\" + val;\n  }\n\n  public static isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n  }\n\n  public static copyObject(src): any {\n    let target = {};\n    for (let prop in src) {\n      if (src.hasOwnProperty(prop)) {\n        if (Utils.isObject(src[prop])) {\n          target[prop] = Utils.copyObject(src[prop]);\n        } else {\n          target[prop] = src[prop];\n        }\n      }\n    }\n    return target;\n  }\n}\n","export class ProtocolMetaData {\n  creator: string = \"\";\n  parserVersion: string = \"v1\";\n  version: number = 0;\n  template?: number = undefined; //Tempalte id\n  completionDate: Date | null = null;\n  receiptDate: Date | null = null;\n  label: string = \"Neues Protokoll\";\n}\n","import { ProtocolMetaData } from \"./protocolMetaData\";\nimport { ProtocolEntry } from \"./protocolEntry\";\nimport { Label } from \"../label\";\n\nexport class Protocol {\n  entries: ProtocolEntry[] = [];\n  metadata: ProtocolMetaData = new ProtocolMetaData();\n  id: number = -1;\n  archived: boolean = false;\n\n  labels: Label[] = [];\n\n  isValid = (): boolean => {\n    let valid = true;\n    this.entries.map((entry) => {\n      if (!entry.isValid()) valid = false;\n      return entry;\n    });\n    return valid;\n  };\n\n  toJSON() {\n    return {\n      entries: this.entries,\n      metadata: this.metadata,\n    };\n  }\n}\n","export class ProtocolEntry {\n  label: string = \"\";\n  type: \"number\" | \"select\" | \"table\" | null = null;\n  private _isValid: boolean = true;\n  protected setValid(valid: boolean): void {\n    this._isValid = valid;\n  }\n  protected setType(type: \"number\" | \"select\" | \"table\") {\n    this.type = type;\n  }\n  public isValid = () => {\n    return this._isValid;\n  };\n}\n","import { ProtocolEntry } from \"./protocolEntry\";\nimport { ProtocolSelectEntry } from \"./protocolSelectEntry\";\nimport { ProtocolNumberEntry } from \"./protocolNumberEntry\";\n\nexport default class ProtocolTableEntry extends ProtocolEntry {\n  constructor() {\n    super();\n    this.setType(\"table\");\n  }\n  zeilen: Zeile[] = [];\n  config: ProtocolTableEntryConfig = new ProtocolTableEntryConfig();\n\n  toJSON() {\n    return {\n      label: this.label,\n      type: this.type,\n      zeilen: this.zeilen,\n      config: this.config,\n    };\n  }\n}\n\nexport class Zeile {\n  header?: boolean;\n  spalten: Spalte[] = [new Spalte()];\n}\n\nexport class Spalte {\n  zeilen?: Zeile[];\n  content?: ProtocolNumberEntry | ProtocolSelectEntry | string;\n}\n\n/**\n * === Configs ===\n * If limitations are not met,\n * the protocol will be marked as not valid\n */\nclass ProtocolTableEntryConfig {\n  //TODO\n}\n","import { ProtocolEntry } from \"./protocolEntry\";\n\nexport class ProtocolNumberEntry extends ProtocolEntry {\n  constructor() {\n    super();\n    this.setType(\"number\");\n  }\n  value: number | null = null;\n  config: ProtocolNumberEntryConfig = new ProtocolNumberEntryConfig();\n\n  public validate = () => {\n    super.setValid(this.checkValid());\n    super.setType(\"number\");\n    return this.isValid();\n  };\n\n  private checkValid = () => {\n    /**\n     * Check if limitations of min and max values are met\n     */\n    if (this.value === null) return false;\n    if (this.config.maxValue === null && this.config.minValue === null)\n      return true;\n    if (this.config.minValue !== null && this.value < this.config.minValue)\n      return false;\n    if (this.config.maxValue !== null && this.value > this.config.maxValue)\n      return false;\n    return true;\n  };\n\n  toJSON() {\n    return {\n      label: this.label,\n      type: this.type,\n      value: this.value,\n      config: this.config,\n    };\n  }\n}\n\n/**\n * === Configs ===\n * If limitations are not met,\n * the protocol will be marked as not valid\n */\nclass ProtocolNumberEntryConfig {\n  /** null means there is no min/max limit */\n  maxValue: number | null = null;\n  minValue: number | null = null;\n}\n","import { ProtocolEntry } from \"./protocolEntry\";\n\nexport class ProtocolSelectEntry extends ProtocolEntry {\n  constructor() {\n    super();\n    this.setType(\"select\");\n  }\n  choices: string[] = [];\n  possibleChoices: string[] = [];\n  config: ProtocolSelectEntryConfig = new ProtocolSelectEntryConfig();\n\n  public validate = () => {\n    super.setValid(this.checkValid());\n    super.setType(\"select\");\n    return this.isValid();\n  };\n\n  private checkValid = () => {\n    /**\n     * Check if choices are part of possibleChoices\n     */\n    var valid = true;\n    this.choices.map((choice: string) => {\n      if (this.possibleChoices.indexOf(choice) === -1) valid = false;\n      return choice;\n    });\n    if (!valid) return false;\n\n    /**\n     * Check if limitations of min and max choices are met\n     */\n    if (this.config.maxChoices === -1 && this.config.minChoices === -1)\n      return true;\n    if (\n      this.config.maxChoices !== -1 &&\n      this.choices.length > this.config.maxChoices\n    )\n      return false;\n    if (\n      this.config.minChoices !== -1 &&\n      this.choices.length < this.config.minChoices\n    )\n      return false;\n    return true;\n  };\n\n  /**\n   * === Overriding toJSON ===\n   * Will be returned when calling object.prototype.toJSON()\n   *\n   * By overriding this method we prevent the JSON from containing\n   * unnecessary information like functions.\n   */\n  toJSON() {\n    return {\n      label: this.label,\n      type: this.type,\n      choices: this.choices,\n      possibleChoices: this.possibleChoices,\n      config: this.config,\n    };\n  }\n}\n\n/**\n * === Configs ===\n * If limitations are not met,\n * the protocol will be marked as not valid\n */\nclass ProtocolSelectEntryConfig {\n  /** -1 means there is no min/max limit */\n  maxChoices: number = -1;\n  minChoices: number = -1;\n}\n","import { Protocol } from \"../models/protocolModels/protocol\";\nimport ProtocolTableEntry from \"../models/protocolModels/protocolTableEntry\";\nimport { ProtocolNumberEntry } from \"../models/protocolModels/protocolNumberEntry\";\nimport { ProtocolSelectEntry } from \"../models/protocolModels/protocolSelectEntry\";\n\n/**\n * @param jsonProtocol JSON-Object of a protocol\n */\nexport class ProtocolParserV1 {\n  private _json: any = {};\n  constructor(jsonProtocol) {\n    this._json = jsonProtocol;\n  }\n\n  /**\n   * @returns Protocol object if the JSON-Object is valid and complete\n   * @returns undefined if e.g. important fields are missing\n   */\n  public parse = (): Protocol | ParserError => {\n    let errors: string[] = [];\n    let json: any = this._json;\n    let protocol: Protocol = new Protocol();\n    if (!(json = json.protocol)) {\n      errors.push(\"The root element of a protocol object must be 'protocol'\");\n    }\n    try {\n      if (\n        (isNaN(Date.parse(json.metadata.completionDate)) ||\n          (protocol.metadata.completionDate = new Date(\n            Date.parse(json.metadata.completionDate)\n          )) === undefined) &&\n        json.metadata.completionDate !== null\n      )\n        throw \"\";\n    } catch (e) {\n      errors.push(\n        \"Missing field 'completionDate' in protocol.metadata, or wrong type. Type must be DATE.\"\n      );\n    }\n    try {\n      if ((protocol.metadata.creator = json.metadata.creator) === undefined)\n        throw \"\";\n    } catch (e) {\n      errors.push(\"Missing field 'creator' in protocol.metadata\");\n    }\n    try {\n      if (\n        (protocol.metadata.parserVersion = json.metadata.parserVersion) ===\n        undefined\n      )\n        throw \"\";\n      if (json.metadata.parserVersion !== \"v1\")\n        errors.push(\n          \"WARNING: The protocol seems to be using another parser version: \" +\n            json.metadata.parserVersion\n        );\n    } catch (e) {\n      errors.push(\"Missing field 'parserVersion' in protocol.metadata\");\n    }\n    try {\n      if (\n        (isNaN(Date.parse(json.metadata.receiptDate)) ||\n          (protocol.metadata.receiptDate = new Date(\n            Date.parse(json.metadata.receiptDate)\n          )) === undefined) &&\n        json.metadata.receiptDate !== null\n      )\n        throw \"\";\n    } catch (e) {\n      errors.push(\n        \"Missing field 'receiptDate' in protocol.metadata, or wrong type. Type must be DATE.\"\n      );\n    }\n    try {\n      if (isNaN((protocol.metadata.version = json.metadata.version))) throw \"\";\n    } catch (e) {\n      errors.push(\"Missing field 'version' in protocol.metadata\");\n    }\n\n    try {\n      if (!(protocol.metadata.label = json.metadata.label)) throw \"\";\n    } catch (e) {\n      errors.push(\"Missing field 'label' in protocol.metadata\");\n    }\n\n    try {\n      json.entries.map((entry, index) => {\n        if (entry.type === \"number\") {\n          let e: ProtocolNumberEntry = new ProtocolNumberEntry();\n          e.label = entry.label;\n          e.type = entry.type;\n          e.value = entry.value;\n          e.config = {\n            maxValue: entry.config.maxValue,\n            minValue: entry.config.minValue,\n          };\n          e.validate();\n          protocol.entries.push(e);\n        } else if (entry.type === \"select\") {\n          let e: ProtocolSelectEntry = new ProtocolSelectEntry();\n          e.label = entry.label;\n          e.type = entry.type;\n          e.choices = entry.choices;\n          e.possibleChoices = entry.possibleChoices;\n          e.config = {\n            maxChoices: entry.config.maxChoices,\n            minChoices: entry.config.minChoices,\n          };\n          e.validate();\n          protocol.entries.push(e);\n        } else if (entry.type === \"table\") {\n          let e: ProtocolTableEntry = new ProtocolTableEntry();\n          e.label = entry.label;\n          e.type = entry.type;\n          e.zeilen = entry.zeilen;\n          protocol.entries.push(e);\n        } else {\n          errors.push(`wrong content type in protocol.entries[${index}]`);\n        }\n      });\n    } catch (e) {\n      errors.push(\n        \"Missing or incorrect field 'protocol.entries' or its content.\"\n      );\n    }\n\n    return errors.length > 0 ? new ParserError(errors) : protocol;\n  };\n}\n\nexport class ParserError {\n  messages: string[] = [];\n  constructor(errors) {\n    this.messages = errors;\n  }\n}\n","import { Protocol } from \"./protocol\";\nimport { ProtocolParserV1, ParserError } from \"../../parser/protocolParserV1\";\n\nexport class ProtocolTemplate {\n  protocol: Protocol = new Protocol();\n  createdAt: Date | undefined = undefined;\n  id: number | undefined = undefined;\n\n  toJSON = () => {\n    let json = {};\n    json[\"protocol\"] = this.protocol;\n    this.createdAt && (json[\"createdAt\"] = this.createdAt);\n    this.id && (json[\"id\"] = this.id);\n    return json;\n  };\n\n  public static fromJSON = (obj): ProtocolTemplate => {\n    let protocol = new ProtocolParserV1({ protocol: obj.protocol }).parse();\n    if (protocol instanceof ParserError) return new ProtocolTemplate();\n    let template = new ProtocolTemplate();\n    template.createdAt = obj.createdAt;\n    template.protocol = protocol;\n    template.id = obj.id;\n    return template;\n  };\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { EventBus } from \"../../../eventbus\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { ProtocolTemplate } from \"../../../models/protocolModels/protocolTemplate\";\nimport axios from \"axios\";\nimport { BackendService } from \"../../../backendservice\";\nimport { App } from \"../../../App\";\n\nexport default class NewTemplateForm extends React.Component {\n  constructor(props) {\n    super(props);\n    EventBus.instance.on(\"openNewTemplateForm\", () => {\n      this.handleClickOpen();\n    });\n  }\n\n  state = { open: false, error: \"\", name: \"\" };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false, error: \"\", name: \"\" });\n  };\n\n  handleCreateClicked = () => {\n    if (this.state.name.trim().length === 0) {\n      this.setState({\n        error: \"Bitte gib eine Bezeichnung für das Protokoll ein.\",\n      });\n      return;\n    }\n\n    let template: ProtocolTemplate = new ProtocolTemplate();\n    template.protocol.metadata.label = this.state.name;\n    template.protocol.metadata.parserVersion = \"v1\";\n    template.createdAt = new Date();\n\n    let data = BackendService.buildWithSessionKey(\n      \"/protocols/templates\",\n      \"POST\",\n      {},\n      template.toJSON()\n    );\n    axios(data)\n      .then((res) => {\n        template.id = res.data.id;\n        App.user.protocols.templates.push(template);\n        this.handleClose();\n        EventBus.instance.emit(\"updateTemplatesView\");\n      })\n      .catch((error) => {\n        this.setState({\n          error:\n            \"Protokolltemplate konnte nicht erstellt werden: \" +\n            BackendService.extractErrorText(error),\n        });\n      })\n      .finally(() => {});\n  };\n\n  handleNameChange = (event: any) => {\n    this.setState({ name: event.target.value });\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.state.open}\n        onClose={this.handleClose.bind(this)}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Neues Template erstellen\n        </DialogTitle>\n        <DialogContent>\n          {this.state.error.trim().length > 0 && (\n            <Alert severity=\"warning\">{this.state.error}</Alert>\n          )}\n          <DialogContentText>\n            Gib bitte einen Namen ein, der dieses Protokoll-Template am besten\n            beschreibt.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Protokollname\"\n            type=\"text\"\n            fullWidth\n            value={this.state.name}\n            onChange={this.handleNameChange.bind(this)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleClose.bind(this)} color=\"primary\">\n            Abbrechen\n          </Button>\n          <Button onClick={this.handleCreateClicked.bind(this)} color=\"primary\">\n            Erstellen\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport { EventBus } from \"../../../eventbus\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { BackendService } from \"../../../backendservice\";\nimport { App } from \"../../../App\";\nimport { ProtocolTemplate } from \"../../../models/protocolModels/protocolTemplate\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport class TemplateDeleteDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    EventBus.instance.on(\"showTemplateDeleteDialog\", (index) => {\n      this.setState({\n        template: App.user.protocols.templates[index],\n        show: true,\n      });\n    });\n  }\n\n  state: { error: string; show: boolean; template: ProtocolTemplate } = {\n    error: \"\",\n    show: false,\n    template: new ProtocolTemplate(),\n  };\n\n  handleClose = () => {\n    this.setState({ show: false, error: \"\" });\n  };\n\n  handleShow = () => {\n    this.setState({ show: true });\n  };\n\n  handleDeleteConfirmed = () => {\n    let data = BackendService.buildWithSessionKey(\n      `/protocols/templates/${this.state.template.id}`,\n      \"DELETE\"\n    );\n    axios(data)\n      .then((res) => {\n        App.user.protocols.templates.splice(\n          App.user.protocols.templates.indexOf(this.state.template),\n          1\n        );\n        this.handleClose();\n        EventBus.instance.emit(\"updateTemplatesView\");\n      })\n      .catch((error) => {\n        this.setState({\n          error: `Template konnte nicht gelöscht werden: ${error.response.data}`,\n        });\n      });\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.state.show}\n        onClose={this.handleClose.bind(this)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Sind Sie sicher?\"}</DialogTitle>\n        <DialogContent>\n          {this.state.error.trim().length > 0 && (\n            <Alert severity=\"warning\">{this.state.error}</Alert>\n          )}\n          <DialogContentText id=\"alert-dialog-description\">\n            Das Protokoll-Template \"\n            {this.state.template.protocol.metadata.label}\" wird endgültig\n            gelöscht. Die mit diesem Template aufgenommenen Protokolle sind\n            davon unberührt.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleClose.bind(this)} color=\"primary\">\n            Abbrechen\n          </Button>\n          <Button\n            onClick={this.handleDeleteConfirmed.bind(this)}\n            color=\"primary\"\n            autoFocus\n          >\n            Löschen\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport { Zoom, Fab } from \"@material-ui/core\";\nimport { App } from \"../App\";\n\nexport class FloatingButton extends React.Component<{\n  onclick?:\n    | ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void)\n    | undefined;\n  left?: boolean;\n  children: any;\n}> {\n  render() {\n    return (\n      <div\n        style={\n          this.props.left\n            ? {\n                position: \"absolute\",\n                right: \"13rem\",\n                bottom: \"0\",\n                height: \"auto\",\n                width: \"auto\",\n              }\n            : {\n                position: \"absolute\",\n                right: \"0\",\n                bottom: \"0\",\n                height: \"auto\",\n                width: \"auto\",\n              }\n        }\n      >\n        <Zoom\n          timeout={App.config.fadeInDuration}\n          in\n          style={{\n            transitionDelay: `${App.config.fadeInDuration}ms`,\n          }}\n          unmountOnExit\n        >\n          <Fab\n            variant=\"extended\"\n            color={this.props.left ? \"secondary\" : \"primary\"}\n            aria-label=\"add\"\n            className=\"action-button-bottom-right\"\n            onClick={this.props.onclick && this.props.onclick}\n          >\n            {this.props.children}\n          </Fab>\n        </Zoom>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { ProtocolNumberEntry } from \"../../../models/protocolModels/protocolNumberEntry\";\nimport axios from \"axios\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n  Icon,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { EventBus } from \"../../../eventbus\";\nimport { LoadingButton } from \"../../../components/loadingButton\";\nimport { BackendService } from \"../../../backendservice\";\nimport { ProtocolTemplate } from \"../../../models/protocolModels/protocolTemplate\";\n\nexport class ProtocolEntryEditNumberView extends React.Component<{\n  entry: ProtocolNumberEntry;\n  template: ProtocolTemplate;\n}> {\n  state = { open: true, error: \"\", loading: false };\n\n  backup: any = JSON.parse(JSON.stringify(this.props.entry));\n\n  handleClose = () => {\n    EventBus.instance.emit(\"updateEditTemplateView\");\n  };\n\n  //rollback\n  handleCancel = () => {\n    this.props.entry.value = this.backup.value;\n    this.props.entry.config = this.backup.config;\n    this.props.entry.label = this.backup.label;\n    this.handleClose();\n  };\n\n  handleLabelChange = (event) => {\n    this.props.entry.label = event.target.value;\n    this.forceUpdate();\n  };\n\n  stopLoading = () => {\n    this.setState({ loading: false });\n  };\n\n  startLoading = () => {\n    this.setState({ loading: true });\n  };\n\n  handleConfigMinValueChange = (event) => {\n    this.props.entry.config.minValue =\n      event.target.value === \"\" ? null : Number(event.target.value);\n    this.forceUpdate();\n  };\n\n  handleConfigMaxValueChange = (event) => {\n    this.props.entry.config.maxValue = Number(event.target.value) || null;\n    this.forceUpdate();\n  };\n\n  handleSaveClicked = () => {\n    if (this.props.entry.label.trim().length === 0) {\n      this.setState({ error: \"Die Bezeichnung/Frage darf nicht leer sein.\" });\n      return;\n    }\n    if (\n      this.props.entry.config.minValue !== null &&\n      this.props.entry.config.maxValue !== null &&\n      this.props.entry.config.minValue > this.props.entry.config.maxValue\n    ) {\n      this.setState({\n        error:\n          \"Der kleinste Wert muss kleiner oder gleich dem größten Wert sein.\",\n      });\n      return;\n    }\n    let index = this.props.template.protocol.entries.indexOf(this.props.entry);\n    if (index === -1)\n      this.props.template.protocol.entries.push(this.props.entry);\n\n    console.log(index);\n\n    let body = {\n      id: this.props.template.id,\n      protocol: this.props.template.protocol,\n    };\n\n    this.startLoading();\n\n    let data = BackendService.buildWithSessionKey(\n      \"/protocols/templates\",\n      \"POST\",\n      {},\n      body\n    );\n    axios(data)\n      .then((res) => {\n        this.props.template.id = res.data.id;\n        this.stopLoading();\n        this.handleClose();\n      })\n      .catch((error) => {\n        this.setState({\n          error:\n            \"Template konnte nicht gespeichert werden: \" +\n            BackendService.extractErrorText(error),\n          loading: false,\n        });\n      });\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.state.open}\n        onClose={this.handleCancel.bind(this)}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Zahlenwertabfrage</DialogTitle>\n        <DialogContent>\n          {this.state.error.trim().length > 0 && (\n            <Alert severity=\"warning\">{this.state.error}</Alert>\n          )}\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Bezeichnung/Frage\"\n            type=\"text\"\n            fullWidth\n            value={this.props.entry.label}\n            onChange={this.handleLabelChange.bind(this)}\n          />\n          <hr color={\"white\"} style={{ marginTop: \"3rem\" }} />\n          <Icon fontSize={\"inherit\"}>settings</Icon> Einstellungen\n          <div style={{ paddingLeft: \"1rem\" }}>\n            <TextField\n              margin=\"dense\"\n              label=\"Kleinster Wert\"\n              type=\"number\"\n              fullWidth\n              value={\n                this.props.entry.config.minValue !== null\n                  ? this.props.entry.config.minValue\n                  : \"\"\n              }\n              onChange={this.handleConfigMinValueChange.bind(this)}\n            />\n            <TextField\n              margin=\"dense\"\n              label=\"Größter Wert\"\n              type=\"number\"\n              fullWidth\n              value={\n                this.props.entry.config.maxValue !== null\n                  ? this.props.entry.config.maxValue\n                  : \"\"\n              }\n              onChange={this.handleConfigMaxValueChange.bind(this)}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleCancel.bind(this)} color=\"primary\">\n            Abbrechen\n          </Button>\n          <LoadingButton\n            loading={this.state.loading}\n            onClick={this.handleSaveClicked.bind(this)}\n          >\n            Speichern\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport { ProtocolNumberEntry } from \"../../../models/protocolModels/protocolNumberEntry\";\nimport { Chip } from \"@material-ui/core\";\nimport WarnIcon from \"@material-ui/icons/WarningOutlined\";\n\ninterface ProtocolNumberEntryViewProps {\n  entry: ProtocolNumberEntry;\n  noChecks?: boolean;\n  noValue?: boolean;\n}\n\nexport class ProtocolNumberEntryView extends React.Component<\n  ProtocolNumberEntryViewProps\n> {\n  styles = {\n    header: {\n      width: \"100%\",\n    },\n    chip: {\n      borderRadius: \"0.5rem\",\n      marginLeft: \"0.5rem\",\n    },\n    value: {},\n  };\n\n  render() {\n    return (\n      <>\n        <div style={this.styles.header}>\n          {this.props.entry.label}{\" \"}\n          <Chip label={\"Zahl\"} size={\"small\"} style={this.styles.chip} />\n          {this.props.entry.config.minValue !== null && (\n            <Chip\n              label={<>&ge; {this.props.entry.config.minValue}</>}\n              size={\"small\"}\n              style={this.styles.chip}\n              variant={\"outlined\"}\n            />\n          )}\n          {this.props.entry.config.maxValue !== null && (\n            <Chip\n              label={<>&le; {this.props.entry.config.maxValue}</>}\n              size={\"small\"}\n              style={this.styles.chip}\n              variant={\"outlined\"}\n            />\n          )}\n          {!this.props.noChecks && !this.props.entry.validate() && (\n            <Chip\n              avatar={\n                <WarnIcon\n                  style={{ backgroundColor: \"inherit\", color: \"inherit\" }}\n                />\n              }\n              label={\"Grenzen nicht eingehalten\"}\n              size={\"small\"}\n              color={\"secondary\"}\n              style={{ float: \"right\" }}\n              variant={\"outlined\"}\n            />\n          )}\n          {!this.props.noValue && (\n            <>\n              <hr />\n              <div style={this.styles.value}>= {this.props.entry.value}</div>\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Chip, Icon } from \"@material-ui/core\";\nimport WarnIcon from \"@material-ui/icons/WarningOutlined\";\nimport { ProtocolSelectEntry } from \"../../../models/protocolModels/protocolSelectEntry\";\n\ninterface ProtocolSelectEntryViewProps {\n  entry: ProtocolSelectEntry;\n  noChecks?: boolean;\n  noValue?: boolean;\n}\n\nexport class ProtocolSelectEntryView extends React.Component<\n  ProtocolSelectEntryViewProps\n> {\n  styles = {\n    header: {\n      width: \"100%\",\n    },\n    chip: {\n      borderRadius: \"0.5rem\",\n      marginLeft: \"0.5rem\",\n    },\n    value: {},\n  };\n\n  render() {\n    return (\n      <>\n        <div style={this.styles.header}>\n          {this.props.entry.label}{\" \"}\n          <Chip label={\"Auswahl\"} size={\"small\"} style={this.styles.chip} />\n          {this.props.entry.config.minChoices !== null && (\n            <Chip\n              label={<>mindestens {this.props.entry.config.minChoices}</>}\n              size={\"small\"}\n              style={this.styles.chip}\n              variant={\"outlined\"}\n            />\n          )}\n          {this.props.entry.config.maxChoices !== null && (\n            <Chip\n              label={<>höchstens {this.props.entry.config.maxChoices}</>}\n              size={\"small\"}\n              style={this.styles.chip}\n              variant={\"outlined\"}\n            />\n          )}\n          {!this.props.noChecks && !this.props.entry.validate() && (\n            <Chip\n              avatar={\n                <WarnIcon\n                  style={{ backgroundColor: \"inherit\", color: \"inherit\" }}\n                />\n              }\n              label={\"Grenzen nicht eingehalten\"}\n              size={\"small\"}\n              color={\"secondary\"}\n              style={{ float: \"right\" }}\n              variant={\"outlined\"}\n            />\n          )}\n          {!this.props.noValue && <hr />}\n          {this.props.noValue && (\n            <div style={{ width: \"100%\", padding: \"0.5rem\" }}></div>\n          )}\n          <div style={this.styles.value}>\n            {!this.props.noValue && <>Auswahl: </>}\n            {this.props.entry.possibleChoices.map((choice, index) => {\n              return (\n                <Chip\n                  key={index}\n                  icon={\n                    this.props.entry.choices.indexOf(choice) === -1 ? (\n                      <Icon>check_box_outline_blank</Icon>\n                    ) : (\n                      <Icon>check_box</Icon>\n                    )\n                  }\n                  label={choice}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  style={{ marginBottom: \"0.5rem\", marginRight: \"0.5rem\" }}\n                  disabled={\n                    this.props.entry.choices.indexOf(choice) === -1 &&\n                    !this.props.noValue\n                  }\n                />\n              );\n            })}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Chip } from \"@material-ui/core\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nexport class EditableChip extends React.Component<\n  any & { color: string; backgroundColor: string }\n> {\n  state = {\n    edit: this.props.edit ? this.props.edit : false,\n    value: this.props.value,\n  };\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  };\n\n  handleSave = () => {\n    if (this.state.value.trim().length === 0 && this.props.value.length === 0) {\n      this.props.onDelete();\n      return;\n    }\n    if (this.state.value.trim().length === 0) {\n      this.setState({ edit: false, value: this.props.value });\n    } else {\n      this.setState({ edit: false });\n      this.props.onChange(this.state.value.trim());\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.edit ? (\n          <Chip\n            icon={this.props.icon}\n            label={\n              <input\n                style={{ border: \"none\", outline: \"none\" }}\n                size={this.state.value.length || 1}\n                autoFocus\n                type=\"text\"\n                value={this.state.value}\n                onChange={this.handleChange.bind(this)}\n                onBlur={this.handleSave.bind(this)}\n              />\n            }\n            color={this.props.color}\n            variant={this.props.variant}\n            onDelete={this.handleSave.bind(this)}\n            deleteIcon={<DoneIcon />}\n            style={{ marginBottom: \"0.5rem\", marginRight: \"0.5rem\" }}\n          />\n        ) : (\n          <Chip\n            icon={this.props.icon}\n            label={this.state.value}\n            color={this.props.color}\n            variant={this.props.variant}\n            onDelete={this.props.onDelete}\n            onClick={() => {\n              this.setState({ edit: true });\n            }}\n            style={{\n              marginBottom: \"0.5rem\",\n              marginRight: \"0.5rem\",\n              backgroundColor: this.props.backgroundColor,\n            }}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n  Icon,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { EventBus } from \"../../../eventbus\";\nimport { LoadingButton } from \"../../../components/loadingButton\";\nimport { BackendService } from \"../../../backendservice\";\nimport { ProtocolTemplate } from \"../../../models/protocolModels/protocolTemplate\";\nimport { ProtocolSelectEntry } from \"../../../models/protocolModels/protocolSelectEntry\";\nimport { EditableChip } from \"../../../components/editableChip\";\n\nexport class ProtocolEntryEditSelectView extends React.Component<{\n  entry: ProtocolSelectEntry;\n  template: ProtocolTemplate;\n}> {\n  state = { open: true, error: \"\", loading: false };\n\n  backup: any = JSON.parse(JSON.stringify(this.props.entry));\n\n  handleClose = () => {\n    EventBus.instance.emit(\"updateEditTemplateView\");\n  };\n\n  //rollback\n  handleCancel = () => {\n    this.props.entry.choices = this.backup.choices;\n    this.props.entry.possibleChoices = this.backup.possibleChoices;\n    this.props.entry.config = this.backup.config;\n    this.props.entry.label = this.backup.label;\n    this.handleClose();\n  };\n\n  handleLabelChange = (event) => {\n    this.props.entry.label = event.target.value;\n    this.forceUpdate();\n  };\n\n  stopLoading = () => {\n    this.setState({ loading: false });\n  };\n\n  startLoading = () => {\n    this.setState({ loading: true });\n  };\n\n  handleConfigMinValueChange = (event) => {\n    this.props.entry.config.minChoices =\n      event.target.value === \"\" ? -1 : Number(event.target.value);\n    this.forceUpdate();\n  };\n\n  handleConfigMaxValueChange = (event) => {\n    this.props.entry.config.maxChoices = Number(event.target.value) || -1;\n    this.forceUpdate();\n  };\n\n  handleDeleteChoice = (index: number) => {\n    let ci: number;\n    if (\n      (ci = this.props.entry.choices.indexOf(\n        this.props.entry.possibleChoices[index]\n      )) !== -1\n    )\n      this.props.entry.choices.splice(ci, 1);\n    this.props.entry.possibleChoices.splice(index, 1);\n    this.forceUpdate();\n  };\n\n  handleChoiceChange = (index: number, value: string) => {\n    this.props.entry.possibleChoices[index] = value;\n    console.log(\"Change: \" + value);\n    this.forceUpdate();\n  };\n\n  handleSaveClicked = () => {\n    if (this.props.entry.label.trim().length === 0) {\n      this.setState({ error: \"Die Bezeichnung/Frage darf nicht leer sein.\" });\n      return;\n    }\n    if (this.props.entry.possibleChoices.length === 0) {\n      this.setState({\n        error: \"Fügen Sie mindestens eine Antwortmöglichkeit hinzu.\",\n      });\n      return;\n    }\n    if (\n      this.props.entry.config.minChoices !== null &&\n      this.props.entry.config.maxChoices !== null &&\n      this.props.entry.config.minChoices > this.props.entry.config.maxChoices\n    ) {\n      this.setState({\n        error:\n          \"Die mindestens geforderte Anzahl an Auswahlen muss kleiner oder gleich der Höchstzahl sein.\",\n      });\n      return;\n    }\n    let index = this.props.template.protocol.entries.indexOf(this.props.entry);\n    if (index === -1)\n      this.props.template.protocol.entries.push(this.props.entry);\n\n    console.log(index);\n\n    let body = {\n      id: this.props.template.id,\n      protocol: this.props.template.protocol,\n    };\n\n    this.startLoading();\n\n    let data = BackendService.buildWithSessionKey(\n      \"/protocols/templates\",\n      \"POST\",\n      {},\n      body\n    );\n    axios(data)\n      .then((res) => {\n        this.props.template.id = res.data.id;\n        this.stopLoading();\n        this.handleClose();\n      })\n      .catch((error) => {\n        this.setState({\n          error:\n            \"Template konnte nicht gespeichert werden: \" +\n            BackendService.extractErrorText(error),\n          loading: false,\n        });\n      });\n  };\n\n  render() {\n    let addButtonDisabled = false;\n    return (\n      <Dialog\n        open={this.state.open}\n        onClose={this.handleCancel.bind(this)}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Auswahl / Multiple Choice\n        </DialogTitle>\n        <DialogContent>\n          {this.state.error.trim().length > 0 && (\n            <Alert severity=\"warning\">{this.state.error}</Alert>\n          )}\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Bezeichnung/Frage\"\n            type=\"text\"\n            fullWidth\n            value={this.props.entry.label}\n            onChange={this.handleLabelChange.bind(this)}\n          />\n          <hr color={\"white\"} style={{ marginTop: \"3rem\" }} />\n          {this.props.entry.possibleChoices.length === 0 ? (\n            <Typography color={\"textSecondary\"} variant={\"subtitle2\"}>\n              Fügen Sie Antwortmöglichkeiten hinzu.\n            </Typography>\n          ) : (\n            <Typography color={\"textSecondary\"} variant={\"subtitle2\"}>\n              Klicken Sie auf eine Antwort, um sie zu bearbeiten.\n            </Typography>\n          )}\n          {this.props.entry.possibleChoices.map(\n            (choice: string, index: number) => {\n              if (\n                choice.length === 0 &&\n                index === this.props.entry.possibleChoices.length - 1\n              )\n                addButtonDisabled = true;\n              return (\n                <EditableChip\n                  key={\"28e7an-\" + index}\n                  icon={<Icon>check_box_outline_blank</Icon>}\n                  value={choice}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  onChange={(value) => {\n                    this.handleChoiceChange(index, value);\n                  }}\n                  edit={\n                    choice.length === 0 &&\n                    index === this.props.entry.possibleChoices.length - 1\n                  }\n                  onDelete={this.handleDeleteChoice.bind(this, index)}\n                />\n              );\n            }\n          )}\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={() => {\n              this.props.entry.possibleChoices.push(\"\");\n              this.forceUpdate();\n            }}\n            disabled={addButtonDisabled}\n          >\n            <Icon>add</Icon>\n          </IconButton>\n          <hr color={\"white\"} style={{ marginTop: \"3rem\" }} />\n          <Icon fontSize={\"inherit\"}>settings</Icon> Einstellungen\n          <div style={{ paddingLeft: \"1rem\" }}>\n            <TextField\n              margin=\"dense\"\n              label=\"Mindestanzahl anzukreuzender Antworten\"\n              type=\"number\"\n              fullWidth\n              value={\n                this.props.entry.config.minChoices !== -1\n                  ? this.props.entry.config.minChoices\n                  : \"\"\n              }\n              onChange={this.handleConfigMinValueChange.bind(this)}\n            />\n            <TextField\n              margin=\"dense\"\n              label=\"Höchstanzahl anzukreuzender Antworten\"\n              type=\"number\"\n              fullWidth\n              value={\n                this.props.entry.config.maxChoices !== -1\n                  ? this.props.entry.config.maxChoices\n                  : \"\"\n              }\n              onChange={this.handleConfigMaxValueChange.bind(this)}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleCancel.bind(this)} color=\"primary\">\n            Abbrechen\n          </Button>\n          <LoadingButton\n            loading={this.state.loading}\n            onClick={this.handleSaveClicked.bind(this)}\n          >\n            Speichern\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport ProtocolTableEntry from \"../../../models/protocolModels/protocolTableEntry\";\n\nexport class ProtocolTableEntryView extends React.Component<{\n  entry: ProtocolTableEntry;\n}> {\n  render() {\n    return \"Hallo Tabelle!\";\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n  Icon,\n  Typography,\n  IconButton,\n  Fab,\n  Table,\n  TableRow,\n  TableCell,\n  TableBody,\n  MenuItem,\n  Menu,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { EventBus } from \"../../../eventbus\";\nimport { LoadingButton } from \"../../../components/loadingButton\";\nimport { BackendService } from \"../../../backendservice\";\nimport { ProtocolTemplate } from \"../../../models/protocolModels/protocolTemplate\";\nimport ProtocolTableEntry, {\n  Zeile,\n  Spalte,\n} from \"../../../models/protocolModels/protocolTableEntry\";\nimport { ProtocolNumberEntry } from \"../../../models/protocolModels/protocolNumberEntry\";\nimport { ProtocolSelectEntry } from \"../../../models/protocolModels/protocolSelectEntry\";\nimport uuid from \"uuid/v4\";\nimport { EditableChip } from \"../../../components/editableChip\";\n\nexport class ProtocolEntryEditTableView extends React.Component<{\n  entry: ProtocolTableEntry;\n  template: ProtocolTemplate;\n}> {\n  constructor(props) {\n    super(props);\n    EventBus.instance.on(\"updateProtocolEntryEditTableView\", () => {\n      this.forceUpdate();\n    });\n  }\n  state = { open: true, error: \"\", loading: false };\n\n  backup: any = JSON.parse(JSON.stringify(this.props.entry));\n\n  handleClose = () => {\n    EventBus.instance.emit(\"updateEditTemplateView\");\n  };\n\n  //rollback\n  handleCancel = () => {\n    this.props.entry.zeilen = this.backup.zeilen;\n    this.props.entry.config = this.backup.config;\n    this.props.entry.label = this.backup.label;\n    this.handleClose();\n  };\n\n  handleLabelChange = (event) => {\n    this.props.entry.label = event.target.value;\n    this.forceUpdate();\n  };\n\n  stopLoading = () => {\n    this.setState({ loading: false });\n  };\n\n  startLoading = () => {\n    this.setState({ loading: true });\n  };\n\n  handleSaveClicked = () => {\n    if (this.props.entry.label.trim().length === 0) {\n      this.setState({ error: \"Die Bezeichnung/Frage darf nicht leer sein.\" });\n      return;\n    }\n    if (\n      this.props.entry.zeilen.length === 0 ||\n      this.props.entry.zeilen[0].spalten?.length === 0\n    ) {\n      this.setState({\n        error: \"Fügen Sie mindestens eine Zeile und eine Spalte hinzu.\",\n      });\n      return;\n    }\n    let index = this.props.template.protocol.entries.indexOf(this.props.entry);\n    if (index === -1)\n      this.props.template.protocol.entries.push(this.props.entry);\n\n    console.log(index);\n\n    let body = {\n      id: this.props.template.id,\n      protocol: this.props.template.protocol,\n    };\n\n    this.startLoading();\n\n    let data = BackendService.buildWithSessionKey(\n      \"/protocols/templates\",\n      \"POST\",\n      {},\n      body\n    );\n    axios(data)\n      .then((res) => {\n        this.props.template.id = res.data.id;\n        this.stopLoading();\n        this.handleClose();\n      })\n      .catch((error) => {\n        this.setState({\n          error:\n            \"Template konnte nicht gespeichert werden: \" +\n            BackendService.extractErrorText(error),\n          loading: false,\n        });\n      });\n  };\n\n  render() {\n    let addButtonDisabled = false;\n    console.log(this.props.entry);\n    return (\n      <Dialog\n        fullWidth\n        open={this.state.open}\n        onClose={this.handleCancel.bind(this)}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">ENDLICH: Tabelle!!!</DialogTitle>\n        <DialogContent>\n          {this.state.error.trim().length > 0 && (\n            <Alert severity=\"warning\">{this.state.error}</Alert>\n          )}\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Bezeichnung/Frage\"\n            type=\"text\"\n            fullWidth\n            value={this.props.entry.label}\n            onChange={this.handleLabelChange.bind(this)}\n          />\n          <hr color={\"white\"} style={{ marginTop: \"3rem\" }} />\n          {this.props.entry.zeilen.length === 0 && (\n            <Typography color={\"textSecondary\"} variant={\"subtitle2\"}>\n              Fügen Sie eine Zeile hinzu.\n            </Typography>\n          )}\n          {this.buildTableRecursive()}\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              this.props.entry.zeilen.push(new Zeile());\n              this.forceUpdate();\n            }}\n          >\n            <Icon>add</Icon>\n            Zeile\n          </Button>\n          <hr color={\"white\"} style={{ marginTop: \"3rem\" }} />\n          <Icon fontSize={\"inherit\"}>settings</Icon> Einstellungen\n          <div style={{ paddingLeft: \"1rem\" }}>TODO</div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleCancel.bind(this)} color=\"primary\">\n            Abbrechen\n          </Button>\n          <LoadingButton\n            loading={this.state.loading}\n            onClick={this.handleSaveClicked.bind(this)}\n          >\n            Speichern\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n\n  buildTableRecursive = () => {\n    return (\n      <Table>\n        <TableBody>\n          {this.props.entry.zeilen.map((zeile: Zeile, index: number) => {\n            return this.buildTableRowRecursive(\n              zeile,\n              this.props.entry.zeilen,\n              index\n            );\n          })}\n        </TableBody>\n      </Table>\n    );\n  };\n\n  buildTableRowRecursive = (\n    zeile: Zeile,\n    parent: Zeile[] | undefined,\n    index: number\n  ) => {\n    {\n      if (zeile.spalten.length === 0) {\n        if (parent) {\n          parent.splice(index, 1);\n          EventBus.instance.emit(\"updateProtocolEntryEditTableView\");\n        }\n        return;\n      }\n      return (\n        <TableRow key={uuid()}>\n          <TableCell>\n            <RowMenu zeile={zeile} parent={parent} index={index} />\n          </TableCell>\n\n          {zeile.spalten.map((spalte: Spalte, indexSpalte: number) => {\n            return this.buildTableCellRecursive(spalte, zeile, indexSpalte);\n          })}\n        </TableRow>\n      );\n    }\n  };\n\n  buildTableCellRecursive = (spalte: Spalte, parent: Zeile, index: number) => {\n    {\n      if (spalte.zeilen && spalte.zeilen.length === 0) {\n        spalte.zeilen = undefined;\n      }\n      return (\n        <TableCell key={uuid()} style={{ border: \"1px solid black\" }}>\n          {spalte.zeilen && spalte.zeilen.length > 0 && (\n            <Table>\n              <TableBody>\n                {spalte.zeilen.map((zeile: Zeile, zeileIndex: number) => {\n                  return this.buildTableRowRecursive(\n                    zeile,\n                    spalte.zeilen,\n                    zeileIndex\n                  );\n                })}\n              </TableBody>\n            </Table>\n          )}\n          {spalte.content && (\n            <>\n              {spalte.content instanceof ProtocolNumberEntry && <>ZAHL</>}\n              {spalte.content instanceof ProtocolSelectEntry && <>SELECT</>}\n              {\n                <div\n                  style={{\n                    fontWeight: parent.header ? \"bold\" : \"inherit\",\n                  }}\n                >\n                  {spalte.content}\n                </div>\n              }\n              <NewCellMenu spalte={spalte} parent={parent} index={index} edit />\n            </>\n          )}\n          {!spalte.content && !spalte.zeilen && (\n            <>\n              <NewCellMenu spalte={spalte} parent={parent} index={index} />\n            </>\n          )}\n        </TableCell>\n      );\n    }\n  };\n}\n\nclass RowMenu extends React.Component<{\n  zeile: Zeile;\n  parent?: Zeile[];\n  index: number;\n}> {\n  state = { anchor: null };\n  handleOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    this.setState({ anchor: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchor: null });\n  };\n\n  handleAddSpalte = () => {\n    this.props.zeile.spalten.push(new Spalte());\n    EventBus.instance.emit(\"updateProtocolEntryEditTableView\");\n  };\n\n  handleDeleteZeile = () => {\n    this.props.parent?.splice(this.props.index, 1);\n    EventBus.instance.emit(\"updateProtocolEntryEditTableView\");\n  };\n\n  handleAddZeileTop = () => {\n    this.props.parent?.splice(this.props.index, 0, new Zeile());\n    EventBus.instance.emit(\"updateProtocolEntryEditTableView\");\n  };\n\n  handleAddZeileBottom = () => {\n    this.props.parent?.splice(this.props.index + 1, 0, new Zeile());\n    EventBus.instance.emit(\"updateProtocolEntryEditTableView\");\n  };\n\n  handleMarkAsHeader = () => {\n    this.props.zeile.header = true;\n    EventBus.instance.emit(\"updateProtocolEntryEditTableView\");\n  };\n\n  render() {\n    return (\n      <>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          onClick={this.handleOpen.bind(this)}\n        >\n          <Icon>menu</Icon>\n        </IconButton>\n        <Menu\n          anchorEl={this.state.anchor}\n          keepMounted\n          open={Boolean(this.state.anchor)}\n          onClose={this.handleClose.bind(this)}\n        >\n          <MenuItem onClick={this.handleAddZeileTop.bind(this)}>\n            Neue Zeile oberhalb\n          </MenuItem>\n          <MenuItem onClick={this.handleAddZeileBottom.bind(this)}>\n            Neue Zeile unterhalb\n          </MenuItem>\n          <MenuItem onClick={this.handleAddSpalte.bind(this)}>\n            Neue Spalte\n          </MenuItem>\n          <MenuItem onClick={this.handleMarkAsHeader.bind(this)}>\n            Zeile als Header markieren\n          </MenuItem>\n          <MenuItem onClick={this.handleDeleteZeile.bind(this)}>\n            Zeile Löschen\n          </MenuItem>\n        </Menu>\n      </>\n    );\n  }\n}\n\nclass NewCellMenu extends React.Component<{\n  spalte: Spalte;\n  parent?: Zeile;\n  index: number;\n  edit?: boolean;\n}> {\n  state = { anchor: null };\n  handleOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    this.setState({ anchor: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchor: null });\n  };\n\n  handleAddZeile = () => {\n    this.props.spalte.content = undefined;\n    if (!this.props.spalte.zeilen)\n      this.props.spalte.zeilen = [new Zeile(), new Zeile()];\n    EventBus.instance.emit(\"updateProtocolEntryEditTableView\");\n  };\n\n  handleAddSpalte = () => {\n    this.props.spalte.content = undefined;\n    let z: Zeile = new Zeile();\n    z.spalten.push(new Spalte());\n    if (!this.props.spalte.zeilen) this.props.spalte.zeilen = [z];\n    EventBus.instance.emit(\"updateProtocolEntryEditTableView\");\n  };\n\n  handleDeleteSpalte = () => {\n    this.props.parent?.spalten.splice(this.props.index, 1);\n    if (this.props.parent?.spalten.length === 0) this.props.parent.spalten = [];\n    EventBus.instance.emit(\"updateProtocolEntryEditTableView\");\n  };\n\n  handleSetNumberEntry = () => {\n    this.props.spalte.content = new ProtocolNumberEntry();\n    EventBus.instance.emit(\"updateProtocolEntryEditTableView\");\n  };\n\n  handleSetSelectEntry = () => {\n    this.props.spalte.content = new ProtocolSelectEntry();\n    EventBus.instance.emit(\"updateProtocolEntryEditTableView\");\n  };\n\n  handleSetValue = (val: string) => {\n    this.props.spalte.content = val;\n    EventBus.instance.emit(\"updateProtocolEntryEditTableView\");\n  };\n\n  handleDeleteValue = () => {\n    this.props.spalte.content = undefined;\n    EventBus.instance.emit(\"updateProtocolEntryEditTableView\");\n  };\n\n  render() {\n    return (\n      <>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          onClick={this.handleOpen.bind(this)}\n        >\n          <Icon>{this.props.edit ? \"edit\" : \"add\"}</Icon>\n        </IconButton>\n        <Menu\n          anchorEl={this.state.anchor}\n          keepMounted\n          open={Boolean(this.state.anchor)}\n          onClose={this.handleClose.bind(this)}\n        >\n          <MenuItem onClick={this.handleAddZeile.bind(this)}>\n            Zelle in zwei Zeilen teilen\n          </MenuItem>\n          <MenuItem onClick={this.handleAddSpalte.bind(this)}>\n            Zelle in zwei Spalten teilen\n          </MenuItem>\n          <MenuItem onClick={this.handleDeleteSpalte.bind(this)}>\n            Zelle löschen\n          </MenuItem>\n          <MenuItem onClick={this.handleSetNumberEntry.bind(this)}>\n            Zahlenwertabfrage\n          </MenuItem>\n          <MenuItem onClick={this.handleSetSelectEntry.bind(this)}>\n            Auswahl\n          </MenuItem>\n          <MenuItem>\n            Text eingeben:\n            <EditableChip\n              icon={<Icon>text_fields</Icon>}\n              value={\"Titel\"}\n              color=\"primary\"\n              variant=\"outlined\"\n              onChange={(value) => {\n                this.handleSetValue(value);\n              }}\n              onDelete={this.handleDeleteValue.bind(this)}\n            />\n          </MenuItem>\n        </Menu>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Zoom,\n  Paper,\n  IconButton,\n  Icon,\n  Drawer,\n  MenuList,\n  MenuItem,\n  ListItemIcon,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from \"@material-ui/core\";\nimport { App } from \"../../../App\";\nimport { EventBus } from \"../../../eventbus\";\nimport AddFileIcon from \"@material-ui/icons/Add\";\nimport { FloatingButton } from \"../../../components/floatingButton\";\nimport { ProtocolTemplate } from \"../../../models/protocolModels/protocolTemplate\";\nimport { ProtocolNumberEntry } from \"../../../models/protocolModels/protocolNumberEntry\";\nimport { ProtocolEntryEditNumberView } from \"../entryViews/protocolEntryEditNumberView\";\nimport ProtocolTableEntry from \"../../../models/protocolModels/protocolTableEntry\";\nimport { ProtocolSelectEntry } from \"../../../models/protocolModels/protocolSelectEntry\";\nimport { ProtocolNumberEntryView } from \"../entryViews/protocolNumberEntryView\";\nimport { ProtocolSelectEntryView } from \"../entryViews/protocolSelectEntryView\";\nimport { CoverLoader } from \"../../../components/coverLoader\";\nimport { BackendService } from \"../../../backendservice\";\nimport axios from \"axios\";\nimport { ProtocolEntryEditSelectView } from \"../entryViews/protocolEntryEditSelectView\";\nimport { ProtocolTableEntryView } from \"../entryViews/protocolTableEntryView\";\nimport { ProtocolEntry } from \"../../../models/protocolModels/protocolEntry\";\nimport { ProtocolEntryEditTableView } from \"../entryViews/protocolEntryEditTableView\";\n\nexport class EditTemplateView extends React.Component<{ id: number }> {\n  constructor(props) {\n    super(props);\n    EventBus.instance.on(\"updateEditTemplateView\", () => {\n      this.setState({ editEntry: undefined });\n    });\n  }\n  state: {\n    drawerOpen: boolean;\n    editEntry?: ProtocolNumberEntry | ProtocolSelectEntry | ProtocolTableEntry;\n    loading: boolean;\n  } = {\n    drawerOpen: false,\n    editEntry: undefined,\n    loading: false,\n  };\n\n  template: ProtocolTemplate = new ProtocolTemplate();\n\n  //TODO remove this method\n  componentDidMount() {\n    this.setState({ editEntry: this.template.protocol.entries[0] });\n  }\n\n  hideDrawer = () => {\n    this.setState({ drawerOpen: false });\n  };\n\n  showDrawer = () => {\n    this.setState({ drawerOpen: true });\n  };\n\n  handleAddField = (type: \"number\" | \"select\" | \"table\") => {\n    if (type === \"number\") {\n      this.setState({ editEntry: new ProtocolNumberEntry() });\n    }\n    if (type === \"select\") {\n      this.setState({ editEntry: new ProtocolSelectEntry() });\n    }\n    if (type === \"table\") {\n      this.setState({ editEntry: new ProtocolTableEntry() });\n    }\n    this.hideDrawer();\n  };\n\n  handleEditField = (entry: ProtocolEntry) => {\n    this.setState({ editEntry: entry });\n  };\n\n  handleDeleteEntry = (index: number) => {\n    let newObj: any = JSON.parse(JSON.stringify(this.template));\n    newObj.protocol.entries.splice(index, 1);\n    let data = BackendService.buildWithSessionKey(\n      \"/protocols/templates\",\n      \"POST\",\n      {},\n      newObj\n    );\n    this.setState({ loading: true });\n\n    axios(data)\n      .then(() => {\n        this.template.protocol.entries.splice(index, 1);\n      })\n      .catch((error) => {\n        //console.log(ProtocolTemplate.fromJSON(backup));\n      })\n      .finally(() => {\n        this.setState({ loading: false });\n      });\n  };\n\n  render() {\n    this.template = App.user.protocols.templates.find(\n      (t) => t.id === this.props.id\n    )!;\n    console.log(this.template);\n    return (\n      <>\n        {this.state.editEntry !== undefined && (\n          <>\n            {this.state.editEntry instanceof ProtocolNumberEntry && (\n              <ProtocolEntryEditNumberView\n                entry={this.state.editEntry!}\n                template={this.template}\n              />\n            )}\n            {this.state.editEntry instanceof ProtocolSelectEntry && (\n              <ProtocolEntryEditSelectView\n                entry={this.state.editEntry!}\n                template={this.template}\n              />\n            )}\n            {this.state.editEntry instanceof ProtocolTableEntry && (\n              <ProtocolEntryEditTableView\n                entry={this.state.editEntry!}\n                template={this.template}\n              />\n            )}\n          </>\n        )}\n        <FloatingButton onclick={this.showDrawer.bind(this)}>\n          <AddFileIcon style={{ marginRight: \"1rem\" }} />\n          Element einfügen\n        </FloatingButton>\n        <Zoom\n          timeout={App.config.fadeInDuration}\n          in\n          style={{\n            transitionDelay: `${App.config.fadeInDuration}ms`,\n          }}\n          unmountOnExit\n        >\n          <Paper className={\"margin-top padding\"}>\n            <h6 className={\"MuiTypography-root MuiTypography-h6\"}>\n              <IconButton\n                aria-label=\"edit-template\"\n                onClick={() => {\n                  EventBus.instance.emit(\"closeTemplateEditView\");\n                }}\n                onFocus={(event) => event.stopPropagation()}\n                color={\"secondary\"}\n              >\n                <Icon style={{ color: \"black\" }}>arrow_back_ios</Icon>\n              </IconButton>\n              Protokollvorlage bearbeiten:{\" \"}\n              {this.template.protocol.metadata.label}\n            </h6>\n\n            <List>\n              {this.state.loading && <CoverLoader />}\n              {this.template && this.template.protocol.entries.length === 0 && (\n                <Typography color={\"textSecondary\"} variant={\"subtitle2\"}>\n                  Fügen Sie ein Element hinzu, indem Sie unten rechts auf +\n                  ELEMENT HINZUFÜGEN klicken.\n                </Typography>\n              )}\n              {this.template && this.template.protocol.entries.length > 0 && (\n                <Typography color={\"textSecondary\"} variant={\"subtitle2\"}>\n                  Klicken Sie auf ein Element, um es zu bearbeiten.\n                </Typography>\n              )}\n              {this.template &&\n                this.template.protocol.entries.map(\n                  (entry: ProtocolEntry, index: number) => {\n                    return (\n                      <ListItem\n                        button\n                        onClick={this.handleEditField.bind(this, entry)}\n                        key={index}\n                      >\n                        <ListItemIcon>\n                          <Icon>\n                            {entry instanceof ProtocolNumberEntry && (\n                              <>looks_3</>\n                            )}\n                            {entry instanceof ProtocolSelectEntry && (\n                              <>check_box</>\n                            )}\n                            {entry instanceof ProtocolTableEntry && (\n                              <>table_chart</>\n                            )}\n                          </Icon>\n                        </ListItemIcon>\n                        <ListItemText>\n                          {entry instanceof ProtocolNumberEntry && (\n                            <ProtocolNumberEntryView\n                              entry={entry}\n                              noChecks\n                              noValue\n                            />\n                          )}\n                          {entry instanceof ProtocolSelectEntry && (\n                            <ProtocolSelectEntryView\n                              entry={entry}\n                              noChecks\n                              noValue\n                            />\n                          )}\n                          {entry instanceof ProtocolTableEntry && (\n                            <ProtocolTableEntryView entry={entry} />\n                          )}\n                        </ListItemText>\n                        <ListItemSecondaryAction>\n                          <IconButton\n                            edge=\"end\"\n                            aria-label=\"delete\"\n                            onClick={this.handleDeleteEntry.bind(this, index)}\n                          >\n                            <Icon>delete</Icon>\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    );\n                  }\n                )}\n            </List>\n          </Paper>\n        </Zoom>\n        <Drawer\n          anchor={\"right\"}\n          open={this.state.drawerOpen}\n          onClose={this.hideDrawer.bind(this)}\n        >\n          {\n            <MenuList>\n              <MenuItem onClick={this.handleAddField.bind(this, \"number\")}>\n                <ListItemIcon>\n                  <Icon>looks_3</Icon>\n                </ListItemIcon>\n                <Typography variant=\"inherit\">Zahlenwertabfrage</Typography>\n              </MenuItem>\n              <MenuItem onClick={this.handleAddField.bind(this, \"select\")}>\n                <ListItemIcon>\n                  <Icon>check_box</Icon>\n                </ListItemIcon>\n                <Typography variant=\"inherit\">Auswahl</Typography>\n              </MenuItem>\n              <MenuItem onClick={this.handleAddField.bind(this, \"table\")}>\n                <ListItemIcon>\n                  <Icon>table_chart</Icon>\n                </ListItemIcon>\n                <Typography variant=\"inherit\" noWrap>\n                  Tabelle\n                </Typography>\n              </MenuItem>\n            </MenuList>\n          }\n        </Drawer>\n      </>\n    );\n  }\n}\n","export class Label {\n  id: number = 0;\n  name: string = \"\";\n  details: string = \"\";\n  color: string = \"gray\";\n}\n","import React from \"react\";\nimport { Label } from \"../models/label\";\nimport { Chip, Popover, Typography } from \"@material-ui/core\";\nimport LabelIcon from \"@material-ui/icons/Label\";\nimport uuid from \"uuid/v4\";\n\nexport class LabelChip extends React.Component<{ label: Label }> {\n  state = { anchorEl: null };\n\n  handlePopoverClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handlePopoverOpen = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  id: string = uuid();\n\n  render() {\n    let label = this.props.label;\n    return (\n      <>\n        <Chip\n          icon={<LabelIcon />}\n          label={label.name}\n          color=\"secondary\"\n          variant=\"default\"\n          style={{\n            marginBottom: \"0.5rem\",\n            marginLeft: \"0.5rem\",\n            backgroundColor: label.color,\n          }}\n          aria-owns={Boolean(this.state.anchorEl) ? this.id : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={this.handlePopoverOpen.bind(this)}\n          onMouseLeave={this.handlePopoverClose.bind(this)}\n        />\n        <Popover\n          id={this.id}\n          open={Boolean(this.state.anchorEl)}\n          anchorEl={this.state.anchorEl}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={this.handlePopoverClose.bind(this)}\n          disableRestoreFocus\n        >\n          <Typography variant={\"subtitle1\"}>Details</Typography>\n          <Typography variant={\"subtitle1\"}>{label.details}</Typography>\n        </Popover>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { EventBus } from \"../../../eventbus\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  DialogContentText,\n  IconButton,\n  Tooltip,\n  Popover,\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell,\n  TextField,\n} from \"@material-ui/core\";\nimport { LoadingButton } from \"../../../components/loadingButton\";\nimport { Label } from \"../../../models/label\";\nimport { App } from \"../../../App\";\nimport { BackendService } from \"../../../backendservice\";\nimport axios from \"axios\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { ChromePicker } from \"react-color\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport InfoIcon from \"@material-ui/icons/HelpOutline\";\nimport { LabelChip } from \"../../../components/labelChip\";\n\nexport class LabelEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    EventBus.instance.on(\"openLabelEditor\", () => {\n      this.setState({ open: true, error: \"\", loading: false });\n      this.loadLabelsFromBackend();\n    });\n\n    //TODO remove, mock\n    /*let lbl1 = new Label();\n    lbl1.name = \"Testlabel\";\n    lbl1.details = \"Labeldetails\";\n    lbl1.id = 1;\n    lbl1.color = \"blue\";\n\n    let lbl2 = new Label();\n    lbl2.name = \"Testlabel2\";\n    lbl2.details = \"Labeldetails2\";\n    lbl2.id = 2;\n    lbl2.color = \"green\";\n\n    this.copy.push(lbl1);\n    this.copy.push(lbl2);*/\n  }\n\n  loadLabelsFromBackend = () => {\n    let data = BackendService.buildWithSessionKey(\"/labels\", \"GET\");\n    axios(data).then((res) => {\n      App.user.protocols.labels = res.data;\n      this.copy = JSON.parse(JSON.stringify(App.user.protocols.labels));\n      this.forceUpdate();\n    });\n  };\n\n  state: {\n    open: boolean;\n    loading: boolean;\n    error: string;\n    colorPickerAnchor: HTMLElement | null;\n    colorPickerLabel: Label;\n  } = {\n    open: false,\n    loading: false,\n    error: \"\",\n    colorPickerAnchor: null,\n    colorPickerLabel: new Label(),\n  };\n\n  copy: Label[] = [];\n\n  handleClose = () => {\n    this.setState({ open: false, error: \"\", loading: false });\n  };\n\n  deleteLabel = (index) => {\n    this.copy.splice(index, 1);\n    this.forceUpdate();\n  };\n\n  closeColorPicker = () => {\n    this.setState({ colorPickerAnchor: null });\n  };\n\n  openColorPicker = (lbl: Label, event: React.MouseEvent<HTMLElement>) => {\n    this.setState({\n      colorPickerAnchor: event.currentTarget,\n      colorPickerLabel: lbl,\n    });\n  };\n\n  handleColorChange = (color) => {\n    this.state.colorPickerLabel.color = color.hex;\n    this.forceUpdate();\n  };\n\n  handleNameChange = (label: Label, event) => {\n    label.name = event.target.value;\n    this.forceUpdate();\n  };\n\n  handleDetailsChange = (label: Label, event) => {\n    label.details = event.target.value;\n    this.forceUpdate();\n  };\n\n  handleAddClicked = () => {\n    let lbl = new Label();\n    lbl.name = \"Neues Label\";\n    lbl.details = \"\";\n    lbl.color = \"green\";\n\n    this.copy.push(lbl);\n    this.forceUpdate();\n  };\n\n  handleSaveClicked = () => {\n    this.setState({ loading: true });\n    let data = BackendService.buildWithSessionKey(\n      \"/labels\",\n      \"POST\",\n      {},\n      this.copy\n    );\n    axios(data)\n      .then(() => {\n        App.user.protocols.labels = this.copy;\n        this.handleClose();\n      })\n      .catch(() => {\n        this.setState({ error: \"Beim Speichern ist ein Fehler aufgetreten.\" });\n      })\n      .finally(() => {\n        this.setState({ loading: false });\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <Dialog\n          fullWidth\n          open={this.state.open}\n          onClose={this.handleClose.bind(this)}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Labels bearbeiten</DialogTitle>\n          <DialogContent>\n            <Alert variant=\"standard\" color=\"info\" icon={<InfoIcon />}>\n              <DialogContentText>\n                Labels dienen der Gruppierung und Sortierung von Protokollen.\n                <br />\n                Hinterlegte Details werden angezeigt, wenn man mit der Maus über\n                das Label fährt.\n              </DialogContentText>\n            </Alert>\n            {this.state.error.length > 0 && (\n              <Alert severity=\"error\">{this.state.error}</Alert>\n            )}\n            <br />\n            <Popover\n              id={\"colorPickerPopover\"}\n              open={Boolean(this.state.colorPickerAnchor)}\n              anchorEl={this.state.colorPickerAnchor}\n              onClose={this.closeColorPicker.bind(this)}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"center\",\n              }}\n            >\n              <ChromePicker\n                color={this.state.colorPickerLabel.color}\n                onChange={this.handleColorChange.bind(this)}\n              />\n            </Popover>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"left\">Vorschau</TableCell>\n                  <TableCell align=\"left\">Text</TableCell>\n                  <TableCell align=\"right\">Farbe</TableCell>\n                  <TableCell align=\"right\">Aktionen</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.copy.map((lbl: Label, index: number) => {\n                  return (\n                    <React.Fragment key={\"vdwouk-\" + index}>\n                      <TableRow>\n                        <TableCell style={{ border: \"none\" }}>\n                          <LabelChip label={lbl} />\n                        </TableCell>\n                        <TableCell>\n                          <TextField\n                            value={lbl.name}\n                            onChange={this.handleNameChange.bind(this, lbl)}\n                          />\n                        </TableCell>\n                        <TableCell>\n                          <Tooltip\n                            title=\"Farbe ändern\"\n                            aria-label=\"change_color\"\n                          >\n                            <IconButton\n                              edge=\"end\"\n                              aria-label=\"delete\"\n                              color={\"secondary\"}\n                              onClick={this.openColorPicker.bind(this, lbl)}\n                            >\n                              <div\n                                style={{\n                                  backgroundColor: lbl.color,\n                                  borderRadius: \"50%\",\n                                  border: \"9px solid white\",\n                                  height: \"15px\",\n                                  width: \"15px\",\n                                }}\n                              ></div>\n                            </IconButton>\n                          </Tooltip>\n                        </TableCell>\n                        <TableCell>\n                          <IconButton\n                            edge=\"end\"\n                            aria-label=\"delete\"\n                            color={\"secondary\"}\n                            onClick={this.deleteLabel.bind(this, index)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell colSpan={3}>\n                          <TextField\n                            label=\"Details\"\n                            value={lbl.details}\n                            onChange={this.handleDetailsChange.bind(this, lbl)}\n                            fullWidth\n                          />\n                        </TableCell>\n                      </TableRow>\n                    </React.Fragment>\n                  );\n                })}\n              </TableBody>\n            </Table>\n            <div style={{ textAlign: \"center\" }}>\n              <IconButton onClick={this.handleAddClicked.bind(this)}>\n                <AddIcon />\n              </IconButton>\n            </div>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={this.handleClose.bind(this)}\n              color=\"primary\"\n              disabled={this.state.loading}\n            >\n              Abbrechen\n            </Button>\n            <LoadingButton\n              loading={this.state.loading}\n              onClick={this.handleSaveClicked.bind(this)}\n            >\n              Speichern\n            </LoadingButton>\n          </DialogActions>\n        </Dialog>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport { App } from \"../../../App\";\nimport {\n  Paper,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  List,\n  ListItem,\n  FormControlLabel,\n  Typography,\n  ListItemSecondaryAction,\n  IconButton,\n  Snackbar,\n  Icon,\n} from \"@material-ui/core\";\nimport AddFileIcon from \"@material-ui/icons/Add\";\nimport EditLabelIcon from \"@material-ui/icons/LabelOutlined\";\nimport { CoverLoader } from \"../../../components/coverLoader\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Utils from \"../../../utils\";\nimport { ProtocolTemplate } from \"../../../models/protocolModels/protocolTemplate\";\nimport { EventBus } from \"../../../eventbus\";\nimport NewTemplateForm from \"./newTemplateForm\";\nimport { BackendService } from \"../../../backendservice\";\nimport axios from \"axios\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { TemplateDeleteDialog } from \"./templateDeleteDialog\";\nimport { EditTemplateView } from \"./editTemplateView\";\nimport { FloatingButton } from \"../../../components/floatingButton\";\nimport { ProtocolParserV1 } from \"../../../parser/protocolParserV1\";\nimport { Protocol } from \"../../../models/protocolModels/protocol\";\nimport { LabelEditor } from \"./labelEditor\";\nimport { Label } from \"../../../models/label\";\nimport { LabelChip } from \"../../../components/labelChip\";\n\nexport default class ProtocolTemplatesView extends React.Component {\n  constructor(props) {\n    super(props);\n    EventBus.instance\n      .on(\"updateTemplatesView\", () => {\n        this.forceUpdate();\n      })\n      .on(\"closeTemplateEditView\", () => {\n        this.setState({ editTemplateId: -1 });\n      });\n  }\n  state = {\n    editTemplateId: -1, //TODO set to -1\n    loading: true,\n    error: \"\",\n    showError: false,\n  };\n\n  handleDownloadClicked = (filename: string, id?: number) => {\n    if (!id) return;\n    let data = BackendService.buildWithSessionKey(\n      `/templatetopdf/${id}`,\n      \"GET\"\n    );\n    data.responseType = \"blob\";\n    this.setState({ loading: true });\n    axios(data)\n      .then((res) => {\n        const url = window.URL.createObjectURL(new Blob([res.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", `${filename}.pdf`);\n        document.body.appendChild(link);\n        link.click();\n      })\n      .catch((error) => {})\n      .finally(() => {\n        this.setState({ loading: false });\n      });\n  };\n\n  handleNewTemplateClicked = () => {\n    EventBus.instance.emit(\"openNewTemplateForm\");\n  };\n\n  componentDidMount = async () => {\n    let data = BackendService.buildWithSessionKey(\n      \"/protocols/templates\",\n      \"GET\"\n    );\n    await axios(data)\n      .then((res) => {\n        App.user.protocols.templates = [];\n        res.data.map((template, index) => {\n          let protocol = new ProtocolParserV1({\n            protocol: template.protocol,\n          }).parse();\n          //console.log(protocol);\n          if (!(protocol instanceof Protocol)) {\n            console.log(protocol);\n            this.setState({\n              error: \"Ein fehlerhaftes Template konnte nicht geladen werden.\",\n              showError: true,\n            });\n          } else {\n            template.protocol = protocol;\n            App.user.protocols.templates.push(\n              ProtocolTemplate.fromJSON(template)\n            );\n            App.user.protocols.templates[index].createdAt = new Date(\n              Date.parse(template.createdAt)\n            );\n          }\n          return index;\n        });\n        this.setState({\n          loading: false,\n          ///*TODO: remove the following*/ editTemplateId: 27,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          error: \"Daten konnten nicht abgefragt werden.\",\n          showError: true,\n        });\n      });\n  };\n\n  lbl1 = new Label();\n\n  render() {\n    this.lbl1.name = \"Testlabel\";\n    this.lbl1.details = \"Labeldetails\";\n    this.lbl1.id = 1;\n    this.lbl1.color = \"blue\";\n    return (\n      <>\n        <NewTemplateForm />\n        <TemplateDeleteDialog />\n        <LabelEditor />\n        <Snackbar\n          open={this.state.showError}\n          autoHideDuration={5000}\n          onClose={(event?: React.SyntheticEvent, reason?: string) => {\n            reason !== \"clickaway\" && this.setState({ showError: false });\n          }}\n        >\n          <Alert severity=\"warning\">{this.state.error}</Alert>\n        </Snackbar>\n        {this.state.editTemplateId !== -1 ? (\n          <EditTemplateView id={this.state.editTemplateId} />\n        ) : (\n          <>\n            <FloatingButton onclick={this.handleNewTemplateClicked.bind(this)}>\n              <AddFileIcon style={{ marginRight: \"0.75rem\" }} />\n              Neue Vorlage\n            </FloatingButton>\n            <FloatingButton\n              onclick={() => {\n                EventBus.instance.emit(\"openLabelEditor\");\n              }}\n              left={true}\n            >\n              <EditLabelIcon style={{ marginRight: \"0.75rem\" }} />\n              Labels\n            </FloatingButton>\n            <FadeIn\n              delay={App.config.fadeInDelay}\n              transitionDuration={App.config.fadeInDuration}\n            >\n              <Paper className={\"margin-top padding\"}>\n                {this.state.loading && <CoverLoader />}\n                <h6 className={\"MuiTypography-root MuiTypography-h6\"}>\n                  Protokollvorlagen\n                </h6>\n                {App.user.protocols.templates.length === 0 && (\n                  <Typography color={\"textSecondary\"} variant={\"subtitle2\"}>\n                    Fügen Sie Ihr erstes Tempalte hinzu, indem Sie unten rechts\n                    auf <strong>+ NEUE VORLAGE</strong> klicken.\n                  </Typography>\n                )}\n                {App.user.protocols.templates.map(\n                  (template: ProtocolTemplate, index: number) => {\n                    let protocol = template.protocol;\n                    return (\n                      <List\n                        key={\"ptl-\" + index}\n                        style={{ width: \"100%\", padding: \"0\", margin: \"0\" }}\n                      >\n                        <ListItem\n                          button\n                          onClick={() => {\n                            this.setState({\n                              editTemplateId: template.id,\n                            });\n                          }}\n                        >\n                          <div>\n                            {protocol.metadata.label}\n                            <br />\n                            <Typography\n                              color={\"textSecondary\"}\n                              variant={\"subtitle2\"}\n                            >\n                              {template.createdAt && (\n                                <>\n                                  erstellt am{\" \"}\n                                  {Utils.dateToString(template.createdAt)}\n                                </>\n                              )}\n                            </Typography>\n                          </div>\n                          <LabelChip label={this.lbl1} />\n                          {template.protocol.labels.map(\n                            (label: Label, index: number) => {\n                              return (\n                                <LabelChip\n                                  key={\"lblchip-\" + index}\n                                  label={label}\n                                />\n                              );\n                            }\n                          )}\n                          <ListItemSecondaryAction>\n                            <IconButton\n                              aria-label=\"download-pdf\"\n                              onClick={(event) => {\n                                event.stopPropagation();\n                                this.handleDownloadClicked(\n                                  template.protocol.metadata.label,\n                                  template.id\n                                );\n                              }}\n                              onFocus={(event) => event.stopPropagation()}\n                              color={\"primary\"}\n                            >\n                              <Icon style={{ color: \"black\" }}>get_app</Icon>\n                            </IconButton>\n                            <IconButton\n                              aria-label=\"delete-template\"\n                              onClick={(event) => {\n                                EventBus.instance.emit(\n                                  \"showTemplateDeleteDialog\",\n                                  index\n                                );\n                                event.stopPropagation();\n                              }}\n                              onFocus={(event) => event.stopPropagation()}\n                              color={\"secondary\"}\n                            >\n                              <DeleteIcon />\n                            </IconButton>\n                          </ListItemSecondaryAction>\n                        </ListItem>\n                      </List>\n                    );\n                  }\n                )}\n              </Paper>\n            </FadeIn>\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\ninterface FormattedTextFieldProps {\n  label: string;\n  onChange?: Function;\n}\n\nexport default class FormattedTextField extends React.Component<\n  FormattedTextFieldProps\n> {\n  state: { value: string; displayed: string } = { value: \"\", displayed: \"\" };\n\n  onChange = event => {\n    var value = event.target.value;\n    value = value.toUpperCase();\n    value = value.split(\"-\").join(\"\");\n    value = value.split(\" \").join(\"\");\n\n    var dispalyed = \"\";\n    for (var i = 0; i < value.length; i++) {\n      if (i !== 0 && i % 4 === 0) dispalyed += \"-\";\n      dispalyed += value[i];\n    }\n    value.length <= 16 &&\n      this.props.onChange &&\n      this.props.onChange.call(this, value);\n    value.length <= 16 && this.setState({ value: value, displayed: dispalyed });\n  };\n\n  render() {\n    return (\n      <>\n        <TextField\n          value={this.state.displayed}\n          onChange={this.onChange.bind(this)}\n          label={this.props.label}\n          fullWidth\n        />\n      </>\n    );\n  }\n}\n","import { Workee } from \"./workee\";\n\nexport class Device {\n  devicename: string = \"\";\n  devicecode: string = \"\";\n  workee: Workee | undefined = undefined;\n  borrowDate: Date | undefined = undefined;\n  lastsync: Date | undefined = undefined;\n\n  asTableData = () => {\n    return {\n      name: this.devicename,\n      workee: this.workee?.id || undefined,\n      lastsync: this.lastsync,\n    };\n  };\n}\n\nexport class DeviceBuilder {\n  device: Device = new Device();\n  setName = (name) => {\n    this.device.devicename = name;\n    return this;\n  };\n  setCode = (code) => {\n    this.device.devicecode = code;\n    return this;\n  };\n  build = () => {\n    return this.device;\n  };\n}\n","import React from \"react\";\nimport { Badge, Grid } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport { Device } from \"../../models/device\";\nvar QRCode = require(\"qrcode.react\");\n\nexport class QRCodeView extends React.Component<{\n  device?: Device;\n  loading: boolean;\n}> {\n  render() {\n    return (\n      <>\n        {this.props.loading ? (\n          <>\n            <Badge />\n          </>\n        ) : (\n          <>\n            {!!this.props.device ? (\n              <>\n                <QRCode\n                  value={this.props.device.devicecode}\n                  style={{ margin: \"0 auto\", display: \"block\" }}\n                />\n                <Alert severity={\"info\"} style={{ marginTop: \"1rem\" }}>\n                  <AlertTitle>Hinweis</AlertTitle>\n                  <p>\n                    Achten Sie darauf, dass Ihre Brille mit dem Internet\n                    verbunden ist.\n                  </p>\n                  <p>\n                    Wenn Sie den Code zu einem früheren Zeitpunkt bereits\n                    gescannt haben, können Sie einfach sofort auf weiter\n                    klicken.\n                  </p>\n                </Alert>\n              </>\n            ) : (\n              <Alert severity={\"warning\"}>\n                Es konnte kein Gerät erstellt werden. Bitte lade die Seite neu.\n              </Alert>\n            )}\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { QRCodeView } from \"./qrCodeView\";\nimport { BackendService } from \"../../backendservice\";\nimport { Device } from \"../../models/device\";\nimport axios from \"axios\";\n\nexport class RegisterDeviceView extends React.Component<{\n  onClose: any;\n}> {\n  state: { step: number; device?: Device; deviceLoading: boolean } = {\n    step: 1,\n    deviceLoading: true,\n  };\n\n  componentDidMount = () => {\n    this.setState({ deviceLoading: true });\n    let data = BackendService.buildWithSessionKey(\"/devices/register\", \"POST\");\n\n    axios(data)\n      .then((res) => {\n        this.setState({ device: res.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => this.setState({ deviceLoading: false }));\n  };\n\n  handleOpenStepTwo = () => {\n    this.setState({ step: 2 });\n    let data = BackendService.buildWithSessionKey(\n      `/devices/${this.state.device!.devicecode}`,\n      \"GET\"\n    );\n\n    this.timer = setInterval(() => {\n      axios(data)\n        .then((res) => {\n          if (res.data.approved === 1) {\n            this.handleOpenStepThree();\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }, 3000);\n  };\n\n  timer?;\n\n  handleOpenStepThree = () => {\n    this.setState({ step: 3 });\n  };\n\n  handleClose = () => {\n    this.setState({ step: 1, device: undefined, deviceLoading: true });\n    if (!!this.timer) clearInterval(this.timer);\n    this.props.onClose();\n  };\n\n  render() {\n    return (\n      <>\n        <Dialog open={true} onClose={this.handleClose.bind(this)}>\n          <DialogTitle>\n            {this.state.step === 1 &&\n              \"Scannen Sie den QR-Code mit Ihrer Datenbrille und klicken Sie auf Weiter.\"}\n            {this.state.step === 2 &&\n              \"Bitte warten Sie, während sich die Brille verbindet...\"}\n            {this.state.step === 3 && \"Fertig!\"}\n          </DialogTitle>\n          <DialogContent>\n            {this.state.step === 1 && (\n              <QRCodeView\n                device={this.state.device}\n                loading={this.state.deviceLoading}\n              />\n            )}\n            {this.state.step === 2 && (\n              <div style={{ width: \"100%\" }}>\n                <CircularProgress\n                  style={{ margin: \"0 auto\", display: \"block\" }}\n                />\n              </div>\n            )}\n            {this.state.step === 3 && <></>}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose.bind(this)} color=\"primary\">\n              Abbrechen\n            </Button>\n\n            {this.state.step === 1 && !!this.state.device && (\n              <Button\n                onClick={this.handleOpenStepTwo.bind(this)}\n                color=\"primary\"\n                variant={\"contained\"}\n              >\n                Weiter\n              </Button>\n            )}\n\n            {this.state.step === 3 && (\n              <Button onClick={this.handleClose.bind(this)} color=\"primary\">\n                Speichern\n              </Button>\n            )}\n          </DialogActions>\n        </Dialog>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport MaterialTable from \"material-table\";\nimport {\n  Paper,\n  Grid,\n  Button,\n  Chip,\n  Avatar,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  CircularProgress,\n  Snackbar,\n} from \"@material-ui/core\";\nimport FormattedTextField from \"../../components/formattedTextField\";\nimport { App } from \"../../App\";\nimport { EventBus } from \"../../eventbus\";\nimport { DeviceBuilder } from \"../../models/device\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport FadeIn from \"react-fade-in\";\nimport { QRCodeView } from \"./qrCodeView\";\nimport { RegisterDeviceView } from \"./registerDeviceView\";\n\ninterface Row {\n  name: string;\n  workee: number | undefined;\n  lastsync: Date | undefined;\n}\n\ninterface TableProps {\n  data: Row[];\n}\n\ninterface DevicesViewProps {}\n\nexport default class DevicesView extends React.Component<\n  DevicesViewProps & TableProps\n> {\n  constructor(props) {\n    super(props);\n    App.user.workees.map((workee) => {\n      this.lookup[workee.id] = workee.name;\n      return workee;\n    });\n  }\n  lookup: {} = { 0: \"Nicht ausgegeben\" };\n  columns: any = [\n    { title: \"Ihre Gerätekennung\", field: \"name\" },\n    {\n      title: \"Ausgegeben an\",\n      field: \"workee\",\n      lookup: this.lookup,\n    },\n    { title: \"Letzte Synchronisierung\", field: \"lastsync\", type: \"datetime\" },\n  ];\n\n  render() {\n    return (\n      <FadeIn\n        delay={App.config.fadeInDelay}\n        transitionDuration={App.config.fadeInDuration}\n      >\n        <div className={\"margin-top\"}>\n          <MaterialTable\n            options={{\n              paging: false,\n              filtering: false,\n              draggable: false,\n            }}\n            localization={{\n              body: {\n                editTooltip: \"Bearbeiten\",\n                deleteTooltip: \"Löschen\",\n                emptyDataSourceMessage: \"Keine Geräte registriert.\",\n                editRow: {\n                  saveTooltip: \"Speichern\",\n                  cancelTooltip: \"Abbrechen\",\n                  deleteText:\n                    \"Möchtest Du dieses Gerät wirklich entfernen? Es werden dann keine Daten mehr synchronisiert.\",\n                },\n              },\n              header: { actions: \"Aktionen\" },\n              toolbar: { searchPlaceholder: \"Gerätename Suchen\" },\n            }}\n            title=\"Meine Geräte\"\n            columns={this.columns}\n            data={this.props.data}\n            editable={{\n              onRowUpdate: (newData, oldData) =>\n                new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                    if (oldData) {\n                      App.user.devices[\n                        this.props.data.indexOf(oldData)\n                      ].workee = App.user.workees.find(\n                        (w) => w.id + \"\" === newData.workee + \"\"\n                      );\n                      App.user.devices[\n                        this.props.data.indexOf(oldData)\n                      ].lastsync = newData.lastsync;\n                      console.log(oldData);\n                      console.log(newData);\n                      console.log(App.user.devices);\n                    }\n                    EventBus.instance.emit(\"updateApp\");\n                  }, 600);\n                }),\n              onRowDelete: (oldData) =>\n                new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                    App.user.devices.splice(this.props.data.indexOf(oldData));\n                    EventBus.instance.emit(\"updateApp\");\n                  }, 600);\n                }),\n            }}\n          />\n        </div>\n        <AddDeviceView />\n      </FadeIn>\n    );\n  }\n}\n\nclass AddDeviceView extends React.Component {\n  state = {\n    helpOpen: false,\n    deviceCode: \"\",\n    loading: false,\n    error: \"\",\n    showQRCode: false,\n  };\n\n  handleClose = () => {\n    this.setState({ helpOpen: false });\n  };\n\n  handleShow = () => {\n    this.setState({ helpOpen: true });\n  };\n\n  onDeviceCodeChange = (val) => {\n    this.setState({ deviceCode: val });\n  };\n\n  handleRegisterDevice = () => {\n    if (this.state.deviceCode.length === 16) {\n      this.setState({ loading: true });\n      App.user.devices.push(\n        new DeviceBuilder()\n          .setName(\"Brille-\" + (App.user.devices.length + 1))\n          .setCode(this.state.deviceCode)\n          .build()\n      );\n      setTimeout(() => {\n        this.setState({ loading: false });\n        EventBus.instance.emit(\"updateApp\");\n      }, 1000);\n    } else {\n      this.setState({ error: \"Bitte gib den 16-stelligen Gerätecode ein.\" });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.showQRCode && (\n          <RegisterDeviceView\n            onClose={() => {\n              this.setState({ showQRCode: false });\n            }}\n          />\n        )}\n\n        <Paper className={\"margin-top padding\"}>\n          <Snackbar\n            open={this.state.error.length > 0}\n            autoHideDuration={5000}\n            onClose={(event?: React.SyntheticEvent, reason?: string) => {\n              reason !== \"clickaway\" && this.setState({ error: \"\" });\n            }}\n          >\n            <Alert severity=\"warning\">{this.state.error}</Alert>\n          </Snackbar>\n          <h6 className={\"MuiTypography-root MuiTypography-h6\"}>\n            Gerät verknüpfen\n          </h6>\n          <Grid container spacing={3}>\n            <Grid item lg={6} xs={12}>\n              <FormattedTextField\n                label=\"16-stelliger Gerätecode\"\n                onChange={this.onDeviceCodeChange}\n              />\n              <br />\n              <br />\n              <Chip\n                avatar={<Avatar>?</Avatar>}\n                label=\"Wo finde ich den Gerätecode?\"\n                onClick={this.handleShow.bind(this)}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ float: \"right\" }}\n                onClick={() => {\n                  this.setState({ showQRCode: true });\n                }}\n              >\n                QR-Code anzeigen\n              </Button>\n            </Grid>\n            <Grid item lg={6} xs={12}>\n              <div style={{ float: \"right\" }}>\n                <CircularProgress\n                  color=\"secondary\"\n                  style={{\n                    marginRight: \"1rem\",\n                    display: this.state.loading ? \"\" : \"none\",\n                  }}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  style={{ float: \"right\" }}\n                  onClick={this.handleRegisterDevice.bind(this)}\n                >\n                  Gerät registrieren\n                </Button>\n              </div>\n            </Grid>\n          </Grid>\n        </Paper>\n        <Dialog\n          open={this.state.helpOpen}\n          onClose={this.handleClose.bind(this)}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Wo finde ich den Gerätecode?\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Öffnen Sie die {App.appName}-App auf Ihrer Datenbrille. Navigieren\n              Sie im Hauptmenu zum Menupunkt \"Gerätecode anzeigen\" oder sagen\n              Sie einfach \"Gerätecode\".\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose.bind(this)} color=\"primary\">\n              Schließen\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Protocol } from \"../../../models/protocolModels/protocol\";\nimport {\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Grid,\n  Paper,\n} from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport TimeIcon from \"@material-ui/icons/AccessTime\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Utils from \"../../../utils\";\nimport { ProtocolSelectEntry } from \"../../../models/protocolModels/protocolSelectEntry\";\nimport ProtocolTableEntry from \"../../../models/protocolModels/protocolTableEntry\";\nimport { ProtocolNumberEntry } from \"../../../models/protocolModels/protocolNumberEntry\";\nimport { ProtocolNumberEntryView } from \"../entryViews/protocolNumberEntryView\";\nimport { ProtocolSelectEntryView } from \"../entryViews/protocolSelectEntryView\";\nimport axios from \"axios\";\nimport { BackendService } from \"../../../backendservice\";\nimport { EventBus } from \"../../../eventbus\";\nimport { ProtocolEntry } from \"../../../models/protocolModels/protocolEntry\";\n\ninterface CompletedProtocolViewProps {\n  protocol: Protocol;\n  index: number;\n}\n\nexport class CompletedProtocolView extends React.Component<\n  CompletedProtocolViewProps\n> {\n  archiveProtocol = () => {\n    let data = BackendService.buildWithSessionKey(\n      `/protocols/archive/${this.props.protocol.id}`,\n      \"GET\"\n    );\n    axios(data)\n      .then((res) => {\n        EventBus.instance.emit(\n          \"updateCompletedProtocolsViewAndShowSuccessMessage\",\n          \"Protokoll archiviert.\"\n        );\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    return (\n      <Grid container spacing={3}>\n        <Grid item lg={4} md={12} sm={12} xs={12}>\n          <Card variant={\"outlined\"}>\n            <CardMedia\n              style={{ backgroundSize: \"4rem\", minHeight: \"5rem\" }}\n              image=\"/img/protocol.svg\"\n              title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n              <Typography\n                align={\"center\"}\n                gutterBottom\n                variant=\"h5\"\n                component=\"h2\"\n              >\n                {this.props.protocol.metadata.label}\n              </Typography>\n              <List dense={true}>\n                <ListItem>\n                  <ListItemIcon>\n                    <FaceIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={this.props.protocol.metadata.creator}\n                    secondary={\"Mitarbeiter\"}\n                  />\n                </ListItem>\n                <ListItem>\n                  <ListItemIcon>\n                    <TimeIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={\n                      this.props.protocol.metadata.completionDate !== null\n                        ? Utils.dateTimeToString(\n                            this.props.protocol.metadata.completionDate,\n                            true\n                          )\n                        : \"Keine Angabe\"\n                    }\n                    secondary={\"Aufnahmezeitpunkt\"}\n                  />\n                </ListItem>\n              </List>\n            </CardContent>\n            <CardActions>\n              <Button size=\"small\" color=\"secondary\" startIcon={<DeleteIcon />}>\n                Löschen\n              </Button>\n              {!this.props.protocol.archived && (\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  startIcon={<CheckIcon />}\n                  onClick={this.archiveProtocol.bind(this)}\n                >\n                  Protokoll ablegen\n                </Button>\n              )}\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item lg md sm xs>\n          {this.props.protocol.entries.map(\n            (entry: ProtocolEntry, index: number) => {\n              return (\n                <Paper\n                  variant={\"outlined\"}\n                  className={\"protocol-entry-container\"}\n                  key={`protocol-entry-${index}`}\n                >\n                  {entry instanceof ProtocolNumberEntry && (\n                    <ProtocolNumberEntryView entry={entry} />\n                  )}\n                  {entry instanceof ProtocolSelectEntry && (\n                    <ProtocolSelectEntryView entry={entry} />\n                  )}\n                  {entry instanceof ProtocolTableEntry && <></>}\n                </Paper>\n              );\n            }\n          )}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  FormControlLabel,\n  ListItem,\n  List,\n  Checkbox,\n  Typography,\n  ListItemSecondaryAction,\n  IconButton,\n  Chip,\n  ExpansionPanelDetails,\n} from \"@material-ui/core\";\nimport { Protocol } from \"../../../models/protocolModels/protocol\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Utils from \"../../../utils\";\nimport WarnIcon from \"@material-ui/icons/WarningOutlined\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { EventBus } from \"../../../eventbus\";\nimport { CompletedProtocolView } from \"./completedProtocolView\";\nimport { App } from \"../../../App\";\nimport { BackendService } from \"../../../backendservice\";\nimport { ProtocolParserV1 } from \"../../../parser/protocolParserV1\";\nimport axios from \"axios\";\n\nexport class CompletedNewProtocolsView extends React.Component<{\n  selected: number[];\n  expanded: number;\n}> {\n  constructor(props) {\n    super(props);\n    EventBus.instance.on(\n      \"updateCompletedProtocolsViewAndShowSuccessMessage\",\n      (msg) => {\n        this.componentDidMount();\n      }\n    );\n  }\n\n  state = { loading: true };\n\n  componentDidMount = async () => {\n    App.user.protocols.completed = [];\n    let data = BackendService.buildWithSessionKey(\"/protocols/new\", \"GET\");\n    await axios(data)\n      .then((res) => {\n        App.user.protocols.completed = [];\n        res.data.forEach((protocolData) => {\n          //console.log(protocolData);\n          let protocol = new ProtocolParserV1({\n            protocol: protocolData.protocol,\n          }).parse();\n          //console.log(protocol);\n          if (!(protocol instanceof Protocol)) {\n            console.log(protocol);\n          } else {\n            protocol.id = protocolData.id;\n            protocol.archived = false;\n            protocol.metadata.completionDate = new Date(\n              Date.parse(protocolData.protocol.metadata.completionDate)\n            );\n            protocol.metadata.receiptDate = new Date(\n              Date.parse(protocolData.protocol.metadata.receiptDate)\n            );\n            App.user.protocols.completed.push(protocol);\n          }\n        });\n        EventBus.instance.emit(\"updateCompletedProtocolsView\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        {App.user.protocols.completed.map(\n          (protocol: Protocol, index: number) => {\n            return (\n              <ExpansionPanel\n                variant={\"outlined\"}\n                key={`completed-protocol-${index}`}\n                expanded={this.props.expanded === index}\n                style={{ backgroundColor: \"rgba(87, 49, 88, 0.1)\" }}\n              >\n                <ExpansionPanelSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-label=\"Expand\"\n                  aria-controls={`additional-actions${index}-content`}\n                  id={`additional-actions${index}-header`}\n                  onClick={() => {\n                    EventBus.instance.emit(\"handleExpandedChange\", index);\n                  }}\n                >\n                  <List style={{ width: \"100%\", padding: \"0\", margin: \"0\" }}>\n                    <ListItem style={{ padding: \"0\", margin: \"0\" }}>\n                      <FormControlLabel\n                        aria-label=\"Titel\"\n                        style={{ width: \"auto\" }}\n                        onClick={(event) => event.stopPropagation()}\n                        onFocus={(event) => event.stopPropagation()}\n                        control={\n                          <Checkbox\n                            checked={this.props.selected.indexOf(index) !== -1}\n                            onClick={() => {\n                              EventBus.instance.emit(\n                                \"handleSelectChange\",\n                                index\n                              );\n                            }}\n                          />\n                        }\n                        label={\n                          <>\n                            {protocol.metadata.label}\n                            {protocol.metadata.completionDate !== null && (\n                              <Typography\n                                color={\"textSecondary\"}\n                                variant={\"subtitle2\"}\n                              >\n                                {Utils.dateToString(\n                                  protocol.metadata.completionDate\n                                )}\n                              </Typography>\n                            )}\n                          </>\n                        }\n                      />\n                      <ListItemSecondaryAction>\n                        {!protocol.isValid() && (\n                          <>\n                            <Chip\n                              avatar={<WarnIcon />}\n                              label={\"Erfordert Überprüfung\"}\n                            />\n                          </>\n                        )}\n                        <IconButton\n                          aria-label=\"download-pdf\"\n                          onClick={(event) => event.stopPropagation()}\n                          onFocus={(event) => event.stopPropagation()}\n                          color={\"secondary\"}\n                        >\n                          <FontAwesomeIcon icon={\"file-pdf\"} />\n                        </IconButton>\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  </List>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                  <CompletedProtocolView protocol={protocol} index={index} />\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n            );\n          }\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Paper,\n  Button,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  FormControlLabel,\n  ListItem,\n  List,\n  Checkbox,\n  Typography,\n  ListItemSecondaryAction,\n  IconButton,\n  Chip,\n  ExpansionPanelDetails,\n} from \"@material-ui/core\";\nimport { Protocol } from \"../../../models/protocolModels/protocol\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Utils from \"../../../utils\";\nimport WarnIcon from \"@material-ui/icons/WarningOutlined\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { EventBus } from \"../../../eventbus\";\nimport { CompletedProtocolView } from \"./completedProtocolView\";\nimport { App } from \"../../../App\";\nimport axios from \"axios\";\nimport {\n  ProtocolParserV1,\n  ParserError,\n} from \"../../../parser/protocolParserV1\";\nimport { BackendService } from \"../../../backendservice\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nexport class CompletedArchivedProtocolsView extends React.Component<{\n  selected: number[];\n  expanded: number;\n}> {\n  constructor(props) {\n    super(props);\n    EventBus.instance.on(\n      \"updateCompletedProtocolsViewAndShowSuccessMessage\",\n      () => {\n        this.componentDidMount(this.state.page);\n      }\n    );\n  }\n  state = { loading: true, count: 0, page: 1 };\n\n  entriesPerPage: number = 5;\n\n  loadPage = (page: number) => {\n    let data = BackendService.buildWithSessionKey(\n      `/protocols/archived/${\n        page * this.entriesPerPage - this.entriesPerPage\n      }/${this.entriesPerPage}`,\n      \"GET\"\n    );\n    axios(data)\n      .then((res) => {\n        App.user.protocols.completed = [];\n        res.data.forEach((protocolData) => {\n          //console.log(protocolData);\n          let protocol: Protocol | ParserError = new ProtocolParserV1({\n            protocol: protocolData.protocol,\n          }).parse();\n          console.log(protocol);\n          if (!(protocol instanceof Protocol)) {\n            console.log(protocol);\n          } else {\n            protocol.id = protocolData.id;\n            protocol.archived = true;\n            protocol.metadata.completionDate = new Date(\n              Date.parse(protocolData.protocol.metadata.completionDate)\n            );\n            protocol.metadata.receiptDate = new Date(\n              Date.parse(protocolData.protocol.metadata.receiptDate)\n            );\n            App.user.protocols.completed.push(protocol);\n          }\n        });\n        this.setState({ page: page });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  componentDidMount = async (page?: number) => {\n    App.user.protocols.completed = [];\n    let data = BackendService.buildWithSessionKey(\n      \"/protocols/archived/count\",\n      \"GET\"\n    );\n    await axios(data)\n      .then((res) => {\n        this.setState({ count: res.data.count });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    this.loadPage(\n      page !== undefined && page > 0 && page <= this.calcPageCount() ? page : 1\n    );\n  };\n\n  handleChangePage = (event, page) => {\n    this.loadPage(page);\n  };\n\n  calcPageCount = () => {\n    return Math.floor((this.state.count - 1) / this.entriesPerPage) + 1;\n  };\n\n  render() {\n    return (\n      <>\n        <>{this.state.count} Ergebnisse.</>\n        <div className=\"margin-top\">\n          {App.user.protocols.completed.map(\n            (protocol: Protocol, index: number) => {\n              return (\n                <ExpansionPanel\n                  variant={\"outlined\"}\n                  key={`completed-protocol-${index}`}\n                  expanded={this.props.expanded === index}\n                  style={{ backgroundColor: \"rgba(87, 49, 88, 0.1)\" }}\n                >\n                  <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-label=\"Expand\"\n                    aria-controls={`additional-actions${index}-content`}\n                    id={`additional-actions${index}-header`}\n                    onClick={() => {\n                      EventBus.instance.emit(\"handleExpandedChange\", index);\n                    }}\n                  >\n                    <List style={{ width: \"100%\", padding: \"0\", margin: \"0\" }}>\n                      <ListItem style={{ padding: \"0\", margin: \"0\" }}>\n                        <FormControlLabel\n                          aria-label=\"Titel\"\n                          style={{ width: \"auto\" }}\n                          onClick={(event) => event.stopPropagation()}\n                          onFocus={(event) => event.stopPropagation()}\n                          control={\n                            <Checkbox\n                              checked={\n                                this.props.selected.indexOf(index) !== -1\n                              }\n                              onClick={() => {\n                                EventBus.instance.emit(\n                                  \"handleSelectChange\",\n                                  index\n                                );\n                              }}\n                            />\n                          }\n                          label={\n                            <>\n                              {protocol.metadata.label}\n                              {protocol.metadata.completionDate !== null && (\n                                <Typography\n                                  color={\"textSecondary\"}\n                                  variant={\"subtitle2\"}\n                                >\n                                  {Utils.dateToString(\n                                    protocol.metadata.completionDate\n                                  )}\n                                </Typography>\n                              )}\n                            </>\n                          }\n                        />\n                        <ListItemSecondaryAction>\n                          {!protocol.isValid() && (\n                            <>\n                              <Chip\n                                avatar={<WarnIcon />}\n                                label={\"Erfordert Überprüfung\"}\n                              />\n                            </>\n                          )}\n                          <IconButton\n                            aria-label=\"download-pdf\"\n                            onClick={(event) => event.stopPropagation()}\n                            onFocus={(event) => event.stopPropagation()}\n                            color={\"secondary\"}\n                          >\n                            <FontAwesomeIcon icon={\"file-pdf\"} />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    </List>\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails>\n                    <CompletedProtocolView protocol={protocol} index={index} />\n                  </ExpansionPanelDetails>\n                </ExpansionPanel>\n              );\n            }\n          )}\n          <Pagination\n            page={this.state.page}\n            onChange={this.handleChangePage.bind(this)}\n            count={this.calcPageCount()}\n            variant=\"outlined\"\n            color=\"secondary\"\n            style={{ marginTop: \"1rem\" }}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { EventBus } from \"../../../eventbus\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { BackendService } from \"../../../backendservice\";\nimport { App } from \"../../../App\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport class ProtocolDeleteDialog extends React.Component<{ ids: number[] }> {\n  state: { error: string } = {\n    error: \"\",\n  };\n\n  handleClose = () => {\n    this.setState({ error: \"\" });\n    EventBus.instance.emit(\"hideDeleteConfirmDialog\");\n  };\n\n  handleShow = () => {\n    this.setState({ show: true });\n  };\n\n  handleDeleteConfirmed = () => {\n    let data = BackendService.buildWithSessionKey(\n      \"/protocols/delete\",\n      \"POST\",\n      {},\n      {\n        ids: this.props.ids,\n      }\n    );\n    axios(data)\n      .then((res) => {\n        this.props.ids.map((id: number, index: number) => {\n          let i: number = App.user.protocols.completed.findIndex(\n            (obj) => obj.id === id\n          );\n          if (i !== -1) App.user.protocols.completed.splice(i, 1);\n        });\n        this.handleClose();\n        EventBus.instance.emit(\n          \"updateCompletedProtocolsViewAndShowSuccessMessage\",\n          \"Protokoll gelöscht.\"\n        );\n      })\n      .catch((error) => {\n        this.setState({\n          error: `Protokoll konnte nicht gelöscht werden: ${BackendService.extractErrorText(\n            error\n          )}`,\n        });\n      });\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={true}\n        onClose={this.handleClose.bind(this)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Sind Sie sicher?\"}</DialogTitle>\n        <DialogContent>\n          {this.state.error.trim().length > 0 && (\n            <Alert severity=\"warning\">{this.state.error}</Alert>\n          )}\n          <DialogContentText id=\"alert-dialog-description\">\n            {this.props.ids.length > 1 ? (\n              <>Es werden {this.props.ids.length} Protokolle </>\n            ) : (\n              <>Es wird {this.props.ids.length} Protokoll </>\n            )}\n            endgültig gelöscht. Sind Sie sicher?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleClose.bind(this)} color=\"primary\">\n            Abbrechen\n          </Button>\n          <Button\n            onClick={this.handleDeleteConfirmed.bind(this)}\n            color=\"primary\"\n            autoFocus\n          >\n            Löschen\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport { Paper, Tabs, Tab, AppBar, Button, Snackbar } from \"@material-ui/core\";\nimport FadeIn from \"react-fade-in\";\nimport { App } from \"../../../App\";\nimport { ProtocolParserV1 } from \"../../../parser/protocolParserV1\";\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\nimport NewIcon from \"@material-ui/icons/NewReleases\";\nimport { CompletedNewProtocolsView } from \"./completedNewProtocolsView\";\nimport { CompletedArchivedProtocolsView } from \"./completedArchivedProtocolsView\";\nimport { EventBus } from \"../../../eventbus\";\nimport { BackendService } from \"../../../backendservice\";\nimport axios from \"axios\";\nimport { Protocol } from \"../../../models/protocolModels/protocol\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DownloadIcon from \"@material-ui/icons/PictureAsPdf\";\nimport { ProtocolDeleteDialog } from \"./protocolDeleteDialog\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport class CompletedProtocolsView extends React.Component {\n  constructor(props) {\n    super(props);\n    EventBus.instance.on(\"handleExpandedChange\", (index) => {\n      this.handleExpandedChange(index);\n    });\n    EventBus.instance\n      .on(\"handleSelectChange\", (index) => {\n        this.handleSelectChange(index);\n      })\n      .on(\"updateCompletedProtocolsViewAndShowSuccessMessage\", (msg) => {\n        this.setState({\n          selected: [],\n          expanded: -1,\n          showDeleteConfirmDialog: false,\n          successMessage: msg,\n        });\n      })\n      .on(\"updateCompletedProtocolsView\", (resetSelection?: boolean) => {\n        if (resetSelection) {\n          this.setState({\n            selected: [],\n            expanded: -1,\n            showDeleteConfirmDialog: false,\n          });\n        }\n        this.forceUpdate();\n      })\n      .on(\"hideDeleteConfirmDialog\", () => {\n        this.setState({ showDeleteConfirmDialog: false });\n      });\n  }\n\n  getIds = () => {\n    let ids: number[] = [];\n    App.user.protocols.completed.forEach((p: Protocol, index: number) => {\n      if (this.state.selected.indexOf(index) !== -1) ids.push(p.id);\n    });\n    return ids;\n  };\n\n  state: {\n    selected: number[];\n    expanded: number;\n    currentTab: number;\n    showDeleteConfirmDialog: boolean;\n    successMessage: string;\n  } = {\n    selected: [],\n    expanded: -1, //was -1\n    currentTab: 0,\n    showDeleteConfirmDialog: false,\n    successMessage: \"\",\n  };\n\n  handleSelectChange = (index) => {\n    if (this.state.selected.indexOf(index) !== -1) {\n      this.state.selected.splice(this.state.selected.indexOf(index), 1);\n      this.setState({\n        selected: this.state.selected,\n      });\n    } else {\n      this.state.selected.push(index);\n      this.setState({ selected: this.state.selected });\n    }\n  };\n\n  handleExpandedChange = (index: number) => {\n    if (this.state.expanded === index) this.setState({ expanded: -1 });\n    else this.setState({ expanded: index });\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.showDeleteConfirmDialog && (\n          <ProtocolDeleteDialog ids={this.getIds()} />\n        )}\n        <Snackbar\n          open={this.state.successMessage.length > 0}\n          autoHideDuration={6000}\n          onClose={() => {\n            this.setState({ successMessage: \"\" });\n          }}\n        >\n          <Alert\n            onClose={() => {\n              this.setState({ successMessage: \"\" });\n            }}\n            severity=\"success\"\n          >\n            {this.state.successMessage}\n          </Alert>\n        </Snackbar>\n        <FadeIn\n          delay={App.config.fadeInDelay}\n          transitionDuration={App.config.fadeInDuration}\n        >\n          <AppBar position=\"relative\" color=\"default\">\n            <Paper square>\n              <Tabs\n                value={this.state.currentTab}\n                onChange={(event, newVal) => {\n                  this.setState({\n                    currentTab: newVal,\n                    selected: [],\n                    expanded: [],\n                  });\n                }}\n                variant=\"fullWidth\"\n                indicatorColor=\"secondary\"\n                textColor=\"secondary\"\n                aria-label=\"icon label tabs example\"\n              >\n                <Tab icon={<NewIcon />} label=\"NEUE PROTOKOLLE\" />\n                <Tab icon={<ArchiveIcon />} label=\"ARCHIV\" />\n              </Tabs>\n            </Paper>\n          </AppBar>\n          <Paper className=\"padding margin-top\">\n            <h6 className={\"MuiTypography-root MuiTypography-h6\"}>\n              {this.state.currentTab === 0 ? (\n                <>Neue Protokolle</>\n              ) : (\n                <>Abgelegte Protokolle</>\n              )}\n              <div style={{ float: \"right\" }}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  startIcon={<DeleteIcon />}\n                  disabled={this.state.selected.length <= 0}\n                  onClick={() => {\n                    this.setState({ showDeleteConfirmDialog: true });\n                  }}\n                >\n                  Auswahl löschen\n                </Button>{\" \"}\n                {this.state.currentTab === 0 && (\n                  <>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      startIcon={<ArchiveIcon />}\n                      disabled={this.state.selected.length <= 0}\n                    >\n                      Auswahl ablegen\n                    </Button>{\" \"}\n                  </>\n                )}\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  startIcon={<DownloadIcon />}\n                  disabled={this.state.selected.length <= 0}\n                >\n                  Auswahl als .zip herunterladen\n                </Button>\n              </div>\n            </h6>\n            <div className=\"margin-top\">\n              {this.state.currentTab === 0 && (\n                <CompletedNewProtocolsView\n                  selected={this.state.selected}\n                  expanded={this.state.expanded}\n                />\n              )}\n              {this.state.currentTab === 1 && (\n                <CompletedArchivedProtocolsView\n                  selected={this.state.selected}\n                  expanded={this.state.expanded}\n                />\n              )}\n            </div>\n          </Paper>\n        </FadeIn>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Tabs,\n  Tab,\n  Typography,\n  Box,\n  Theme,\n  makeStyles,\n  Paper,\n} from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { AvatarWithIcon } from \"../../components/avatars\";\nimport AccountView from \"./accountView\";\nimport ProtokollvorlagenView from \"./protocolTemplates/protocolTemplatesView\";\nimport DevicesView from \"./devicesView\";\nimport { App } from \"../../App\";\nimport { Device } from \"../../models/device\";\nimport { CompletedProtocolsView } from \"./completedProtocols/completedProtocolsView\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box pl={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    height: \"100%\",\n  },\n}));\n\nexport default function DashboardPageView() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(1);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={\"main-background\"}>\n      <div className={\"dashboard-sidebar\"}>\n        <Paper square>\n          <Tabs\n            orientation=\"vertical\"\n            variant=\"scrollable\"\n            value={value}\n            indicatorColor=\"secondary\"\n            textColor=\"secondary\"\n            onChange={handleChange}\n            aria-label=\"Vertical tabs example\"\n            className={classes.tabs}\n          >\n            <Tab\n              icon={\n                /**TODO: Use username */\n                <AvatarWithIcon\n                  name=\"Leipziger Verkehrsbetriebe\"\n                  avatar=\"/img/avatar/1.jpg\"\n                  icon={\"cog\"}\n                />\n              }\n              label=\"Account\"\n              className={\"dashboard-sidebar-tab\"}\n              {...a11yProps(0)}\n            />\n            <Tab\n              icon={<FontAwesomeIcon icon={\"clipboard-list\"} />}\n              label=\"Protokollvorlagen\"\n              className={\"dashboard-sidebar-tab\"}\n              {...a11yProps(1)}\n            />\n            <Tab\n              icon={<FontAwesomeIcon icon={\"clipboard-check\"} />}\n              label=\"Ausgefüllte Protokolle\"\n              {...a11yProps(2)}\n            />\n            <Tab\n              icon={<FontAwesomeIcon icon={\"glasses\"} />}\n              label=\"Meine Geräte\"\n              {...a11yProps(3)}\n            />\n          </Tabs>\n        </Paper>\n      </div>\n      <TabPanel value={value} index={0}>\n        <TabPanelContainer>\n          <AccountView />\n        </TabPanelContainer>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <TabPanelContainer>\n          <ProtokollvorlagenView />\n        </TabPanelContainer>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <TabPanelContainer>\n          <CompletedProtocolsView />\n        </TabPanelContainer>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <TabPanelContainer>\n          <DevicesView data={buildDevicesData()} />\n        </TabPanelContainer>\n      </TabPanel>\n    </div>\n  );\n}\n\nfunction buildDevicesData() {\n  var data: {\n    name: string;\n    workee: number | undefined;\n    lastsync: Date | undefined;\n  }[] = [];\n  App.user.devices.map((device: Device) => {\n    data.push(device.asTableData());\n    return device;\n  });\n  return data;\n}\n\nclass TabPanelContainer extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          marginLeft: \"15rem\",\n          paddingRight: \"1rem\",\n          overflowY: \"auto\",\n          height: \"100%\",\n        }}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport LoginPageView from \"./views/login/loginPageView\";\nimport DashboardPageView from \"./views/dashboard/dashboardPageView\";\nimport { EventBus } from \"./eventbus\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n} from \"@material-ui/core\";\nimport Auth from \"./auth\";\n\nexport class AppRouter extends React.Component {\n  constructor(props) {\n    super(props);\n    EventBus.instance.on(\"updateApp\", () => {\n      this.forceUpdate();\n    });\n  }\n  render() {\n    return (\n      <>\n        <ContinuosCheckBackendConnection />\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact component={MainPage} />\n            <Route path=\"/login\" exact component={LoginPageView} />\n            <Route path=\"/impressum\" exact component={Impressum} />\n\n            <Route component={NotFoundPage} />\n          </Switch>\n        </Router>\n      </>\n    );\n  }\n}\n\nfunction Impressum() {\n  return (\n    <div>\n      <h2>Impressum</h2>\n    </div>\n  );\n}\n\nfunction MainPage() {\n  if (!Auth.isLoggedIn()) {\n    return <LoginPageView />;\n  }\n  return <DashboardPageView />;\n}\n\nfunction NotFoundPage() {\n  return (\n    <>\n      Seite konnte nicht gefunden werden.\n      <br />\n      <Link to=\"/\">Zurück</Link>\n    </>\n  );\n}\n\nclass ContinuosCheckBackendConnection extends React.Component {\n  state = { error: false };\n  render() {\n    return this.state.error ? (\n      <>\n        <Dialog\n          fullWidth\n          open={this.state.error}\n          onClose={() => {}}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Backend error..</DialogTitle>\n          <DialogContent>\n            <DialogContentText></DialogContentText>\n          </DialogContent>\n        </Dialog>\n      </>\n    ) : null;\n  }\n}\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { EventBus } from \"./eventbus\";\nimport { App } from \"./App\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { AppRouter } from \"./AppRouter\";\nimport Auth from \"./auth\";\nimport { DeviceBuilder } from \"./models/device\";\nimport { UserBuilder } from \"./models/user\";\nimport { BackendService } from \"./backendservice\";\n\nlibrary.add(fas);\nlibrary.add(fab);\n\n/**\n * Global configuration\n * */\n//if (process.env.NODE_ENV !== \"production\")\n//BackendService.config().baseURL(\"http://127.0.0.1:3001/web\").timeout(6000);\n//else\nBackendService.config()\n  .baseURL(\"https://teambrille.herokuapp.com/web\")\n  .timeout(6000);\n\nApp.config.fadeInDuration = 200;\nApp.config.fadeInDelay = 100;\n\n/**\n * Mocked values, for testing only\n * */\n/*App.user = new UserBuilder()\n  .setVorname(\"Angela\")\n  .setNachname(\"Merkel\")\n  .setUnternehmen(\"Leipziger Verkehrsbetriebe\")\n  .setEmail(\"nutzername@test.de\")\n  .build();\n*/\n\nApp.user.devices.push(\n  new DeviceBuilder().setCode(\"HIZG-BAFD-W867-BAWG\").setName(\"Brille-1\").build()\n);\n\n/**\n * Sets session key cookie to value test\n * REMOVE IN PRODUCTION\n */\n//Auth.mock(\"test\");\n\n/**\n * Renders the app and then checks the session.\n * If it expired, the application will re-render\n * and the user will be asked to log in again.\n */\nfunction renderApp() {\n  render(<AppRouter />, document.getElementById(\"root\"));\n  if (Auth.isLoggedIn()) {\n    Auth.checkSession()\n      .then((success) => {})\n      .catch((error) => {\n        if (error === \"Session probably expired\") {\n          EventBus.instance.emit(\"updateApp\");\n        }\n      });\n  }\n}\n\nEventBus.instance\n  .on(\"changeProperty\", (path: string, value: any) => {\n    if (path) {\n      let pathElements = path.split(\".\");\n      let object: any = App;\n\n      while (pathElements.length > 1) {\n        object = object[pathElements.shift()!];\n      }\n\n      object[pathElements[0]] = value;\n    }\n    console.log(\"path: \" + path + \" value: \" + value);\n    renderApp();\n  })\n  .on(\"updateApp\", () => {\n    renderApp();\n  });\n\nexport default renderApp();\n"],"sourceRoot":""}